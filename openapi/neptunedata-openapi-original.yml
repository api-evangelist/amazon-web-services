openapi: 3.1.0
info:
  title: neptunedata
  description: >-
    <p><fullname>Neptune Data API</fullname> <p>The Amazon Neptune data API
    provides SDK support for more than 40 of Neptune's data operations,
    including data loading, query execution, data inquiry, and machine learning.
    It supports the Gremlin and openCypher query languages, and is available in
    all SDK languages. It automatically signs API requests and greatly
    simplifies integrating Neptune into your applications.</p></p>
paths:
  /gremlin/status/{queryId}:
    GET:
      summary: Getgremlinquerystatus
      description: >-
        Gets the status of a specified Gremlin query. When invoking this
        operation in a Neptune cluster that has IAM authentication enabled, the
        IAM user or role making the request must have a policy attached that
        allows the neptune-db:GetQueryStatus IAM action in that cluster. Note
        that the neptune-db:QueryLanguage:Gremlin IAM condition key can be used
        in the policy document to restrict the use of Gremlin queries (see
        Condition keys available in Neptune IAM data-access policy statements).
      operationId: amazonWebServicesGetGremlinQueryStatus
  /loader/{loadId}:
    GET:
      summary: Getloaderjobstatus
      description: >-
        Gets status information about a specified load job. Neptune keeps track
        of the most recent 1,024 bulk load jobs, and stores the last 10,000
        error details per job. See Neptune Loader Get-Status API for more
        information. When invoking this operation in a Neptune cluster that has
        IAM authentication enabled, the IAM user or role making the request must
        have a policy attached that allows the neptune-db:GetLoaderJobStatus IAM
        action in that cluster..
      operationId: amazonWebServicesGetLoaderJobStatus
  /ml/dataprocessing/{id}:
    GET:
      summary: Getmldataprocessingjob
      description: >-
        Retrieves information about a specified data processing job. See The
        dataprocessing command. When invoking this operation in a Neptune
        cluster that has IAM authentication enabled, the IAM user or role making
        the request must have a policy attached that allows the
        neptune-db:neptune-db:GetMLDataProcessingJobStatus IAM action in that
        cluster.
      operationId: amazonWebServicesGetMLDataProcessingJob
  /ml/modeltraining/{id}:
    GET:
      summary: Getmlmodeltrainingjob
      description: >-
        Retrieves information about a Neptune ML model training job. See Model
        training using the modeltraining command. When invoking this operation
        in a Neptune cluster that has IAM authentication enabled, the IAM user
        or role making the request must have a policy attached that allows the
        neptune-db:GetMLModelTrainingJobStatus IAM action in that cluster.
      operationId: amazonWebServicesGetMLModelTrainingJob
  /ml/modeltransform/{id}:
    GET:
      summary: Getmlmodeltransformjob
      description: >-
        Gets information about a specified model transform job. See Use a
        trained model to generate new model artifacts. When invoking this
        operation in a Neptune cluster that has IAM authentication enabled, the
        IAM user or role making the request must have a policy attached that
        allows the neptune-db:GetMLModelTransformJobStatus IAM action in that
        cluster.
      operationId: amazonWebServicesGetMLModelTransformJob
  /opencypher/status/{queryId}:
    GET:
      summary: Getopencypherquerystatus
      description: >-
        Retrieves the status of a specified openCypher query. When invoking this
        operation in a Neptune cluster that has IAM authentication enabled, the
        IAM user or role making the request must have a policy attached that
        allows the neptune-db:GetQueryStatus IAM action in that cluster. Note
        that the neptune-db:QueryLanguage:OpenCypher IAM condition key can be
        used in the policy document to restrict the use of openCypher queries
        (see Condition keys available in Neptune IAM data-access policy
        statements).
      operationId: amazonWebServicesGetOpenCypherQueryStatus
  /ml/endpoints:
    GET:
      summary: Listmlendpoints
      description: >-
        Lists existing inference endpoints. See Managing inference endpoints
        using the endpoints command. When invoking this operation in a Neptune
        cluster that has IAM authentication enabled, the IAM user or role making
        the request must have a policy attached that allows the
        neptune-db:ListMLEndpoints IAM action in that cluster.
      operationId: amazonWebServicesListMLEndpoints
  /ml/endpoints/{id}:
    GET:
      summary: Getmlendpoint
      description: >-
        Retrieves details about an inference endpoint. See Managing inference
        endpoints using the endpoints command. When invoking this operation in a
        Neptune cluster that has IAM authentication enabled, the IAM user or
        role making the request must have a policy attached that allows the
        neptune-db:GetMLEndpointStatus IAM action in that cluster.
      operationId: amazonWebServicesGetMLEndpoint
  /propertygraph/statistics:
    POST:
      summary: Managepropertygraphstatistics
      description: >-
        Manages the generation and use of property graph statistics. When
        invoking this operation in a Neptune cluster that has IAM authentication
        enabled, the IAM user or role making the request must have a policy
        attached that allows the neptune-db:ManageStatistics IAM action in that
        cluster.
      operationId: amazonWebServicesManagePropertygraphStatistics
  /sparql/statistics:
    POST:
      summary: Managesparqlstatistics
      description: >-
        Manages the generation and use of RDF graph statistics. When invoking
        this operation in a Neptune cluster that has IAM authentication enabled,
        the IAM user or role making the request must have a policy attached that
        allows the neptune-db:ManageStatistics IAM action in that cluster.
      operationId: amazonWebServicesManageSparqlStatistics
  /system:
    POST:
      summary: Executefastreset
      description: >-
        The fast reset REST API lets you reset a Neptune graph quicky and
        easily, removing all of its data. Neptune fast reset is a two-step
        process. First you call ExecuteFastReset with action set to
        initiateDatabaseReset. This returns a UUID token which you then include
        when calling ExecuteFastReset again with action set to
        performDatabaseReset. See Empty an Amazon Neptune DB cluster using the
        fast reset API. When invoking this operation in a Neptune cluster that
        has IAM authentication enabled, the IAM user or role making the request
        must have a policy attached that allows the neptune-db:ResetDatabase IAM
        action in that cluster.
      operationId: amazonWebServicesExecuteFastReset
  /gremlin/explain:
    POST:
      summary: Executegremlinexplainquery
      description: >-
        Executes a Gremlin Explain query. Amazon Neptune has added a Gremlin
        feature named explain that provides is a self-service tool for
        understanding the execution approach being taken by the Neptune engine
        for the query. You invoke it by adding an explain parameter to an HTTP
        call that submits a Gremlin query. The explain feature provides
        information about the logical structure of query execution plans. You
        can use this information to identify potential evaluation and execution
        bottlenecks and to tune your query, as explained in Tuning Gremlin
        queries. You can also use query hints to improve query execution plans.
        When invoking this operation in a Neptune cluster that has IAM
        authentication enabled, the IAM user or role making the request must
        have a policy attached that allows one of the following IAM actions in
        that cluster, depending on the query:    neptune-db:ReadDataViaQuery    
        neptune-db:WriteDataViaQuery     neptune-db:DeleteDataViaQuery    Note
        that the neptune-db:QueryLanguage:Gremlin IAM condition key can be used
        in the policy document to restrict the use of Gremlin queries (see
        Condition keys available in Neptune IAM data-access policy statements).
      operationId: amazonWebServicesExecuteGremlinExplainQuery
  /gremlin/profile:
    POST:
      summary: Executegremlinprofilequery
      description: >-
        Executes a Gremlin Profile query, which runs a specified traversal,
        collects various metrics about the run, and produces a profile report as
        output. See Gremlin profile API in Neptune for details. When invoking
        this operation in a Neptune cluster that has IAM authentication enabled,
        the IAM user or role making the request must have a policy attached that
        allows the neptune-db:ReadDataViaQuery IAM action in that cluster. Note
        that the neptune-db:QueryLanguage:Gremlin IAM condition key can be used
        in the policy document to restrict the use of Gremlin queries (see
        Condition keys available in Neptune IAM data-access policy statements).
      operationId: amazonWebServicesExecuteGremlinProfileQuery
  /gremlin:
    POST:
      summary: Executegremlinquery
      description: >-
        This commands executes a Gremlin query. Amazon Neptune is compatible
        with Apache TinkerPop3 and Gremlin, so you can use the Gremlin traversal
        language to query the graph, as described under The Graph in the Apache
        TinkerPop3 documentation. More details can also be found in Accessing a
        Neptune graph with Gremlin. When invoking this operation in a Neptune
        cluster that has IAM authentication enabled, the IAM user or role making
        the request must have a policy attached that enables one of the
        following IAM actions in that cluster, depending on the query:   
        neptune-db:ReadDataViaQuery     neptune-db:WriteDataViaQuery    
        neptune-db:DeleteDataViaQuery    Note that the
        neptune-db:QueryLanguage:Gremlin IAM condition key can be used in the
        policy document to restrict the use of Gremlin queries (see Condition
        keys available in Neptune IAM data-access policy statements).
      operationId: amazonWebServicesExecuteGremlinQuery
  /opencypher/explain:
    POST:
      summary: Executeopencypherexplainquery
      description: >-
        Executes an openCypher explain request. See The openCypher explain
        feature for more information. When invoking this operation in a Neptune
        cluster that has IAM authentication enabled, the IAM user or role making
        the request must have a policy attached that allows the
        neptune-db:ReadDataViaQuery IAM action in that cluster. Note that the
        neptune-db:QueryLanguage:OpenCypher IAM condition key can be used in the
        policy document to restrict the use of openCypher queries (see Condition
        keys available in Neptune IAM data-access policy statements).
      operationId: amazonWebServicesExecuteOpenCypherExplainQuery
  /opencypher:
    POST:
      summary: Executeopencypherquery
      description: >-
        Executes an openCypher query. See Accessing the Neptune Graph with
        openCypher for more information. Neptune supports building graph
        applications using openCypher, which is currently one of the most
        popular query languages among developers working with graph databases.
        Developers, business analysts, and data scientists like openCypher's
        declarative, SQL-inspired syntax because it provides a familiar
        structure in which to querying property graphs. The openCypher language
        was originally developed by Neo4j, then open-sourced in 2015 and
        contributed to the openCypher project under an Apache 2 open-source
        license. Note that when invoking this operation in a Neptune cluster
        that has IAM authentication enabled, the IAM user or role making the
        request must have a policy attached that allows one of the following IAM
        actions in that cluster, depending on the query:   
        neptune-db:ReadDataViaQuery     neptune-db:WriteDataViaQuery    
        neptune-db:DeleteDataViaQuery    Note also that the
        neptune-db:QueryLanguage:OpenCypher IAM condition key can be used in the
        policy document to restrict the use of openCypher queries (see Condition
        keys available in Neptune IAM data-access policy statements).
      operationId: amazonWebServicesExecuteOpenCypherQuery
  /status:
    GET:
      summary: Getenginestatus
      description: >-
        Retrieves the status of the graph database on the host. When invoking
        this operation in a Neptune cluster that has IAM authentication enabled,
        the IAM user or role making the request must have a policy attached that
        allows the neptune-db:GetEngineStatus IAM action in that cluster.
      operationId: amazonWebServicesGetEngineStatus
  /propertygraph/stream:
    GET:
      summary: Getpropertygraphstream
      description: >-
        Gets a stream for a property graph. With the Neptune Streams feature,
        you can generate a complete sequence of change-log entries that record
        every change made to your graph data as it happens.
        GetPropertygraphStream lets you collect these change-log entries for a
        property graph. The Neptune streams feature needs to be enabled on your
        Neptune DBcluster. To enable streams, set the neptune_streams DB cluster
        parameter to 1. See Capturing graph changes in real time using Neptune
        streams. When invoking this operation in a Neptune cluster that has IAM
        authentication enabled, the IAM user or role making the request must
        have a policy attached that allows the neptune-db:GetStreamRecords IAM
        action in that cluster. When invoking this operation in a Neptune
        cluster that has IAM authentication enabled, the IAM user or role making
        the request must have a policy attached that enables one of the
        following IAM actions, depending on the query: Note that you can
        restrict property-graph queries using the following IAM context keys:   
        neptune-db:QueryLanguage:Gremlin    
        neptune-db:QueryLanguage:OpenCypher    See Condition keys available in
        Neptune IAM data-access policy statements).
      operationId: amazonWebServicesGetPropertygraphStream
  /propertygraph/statistics/summary:
    GET:
      summary: Getpropertygraphsummary
      description: >-
        Gets a graph summary for a property graph. When invoking this operation
        in a Neptune cluster that has IAM authentication enabled, the IAM user
        or role making the request must have a policy attached that allows the
        neptune-db:GetGraphSummary IAM action in that cluster.
      operationId: amazonWebServicesGetPropertygraphSummary
  /rdf/statistics/summary:
    GET:
      summary: Getrdfgraphsummary
      description: >-
        Gets a graph summary for an RDF graph. When invoking this operation in a
        Neptune cluster that has IAM authentication enabled, the IAM user or
        role making the request must have a policy attached that allows the
        neptune-db:GetGraphSummary IAM action in that cluster.
      operationId: amazonWebServicesGetRDFGraphSummary
  /sparql/stream:
    GET:
      summary: Getsparqlstream
      description: >-
        Gets a stream for an RDF graph. With the Neptune Streams feature, you
        can generate a complete sequence of change-log entries that record every
        change made to your graph data as it happens. GetSparqlStream lets you
        collect these change-log entries for an RDF graph. The Neptune streams
        feature needs to be enabled on your Neptune DBcluster. To enable
        streams, set the neptune_streams DB cluster parameter to 1. See
        Capturing graph changes in real time using Neptune streams. When
        invoking this operation in a Neptune cluster that has IAM authentication
        enabled, the IAM user or role making the request must have a policy
        attached that allows the neptune-db:GetStreamRecords IAM action in that
        cluster. Note that the neptune-db:QueryLanguage:Sparql IAM condition key
        can be used in the policy document to restrict the use of SPARQL queries
        (see Condition keys available in Neptune IAM data-access policy
        statements).
      operationId: amazonWebServicesGetSparqlStream
  /gremlin/status:
    GET:
      summary: Listgremlinqueries
      description: >-
        Lists active Gremlin queries. See Gremlin query status API for details
        about the output. When invoking this operation in a Neptune cluster that
        has IAM authentication enabled, the IAM user or role making the request
        must have a policy attached that allows the neptune-db:GetQueryStatus
        IAM action in that cluster. Note that the
        neptune-db:QueryLanguage:Gremlin IAM condition key can be used in the
        policy document to restrict the use of Gremlin queries (see Condition
        keys available in Neptune IAM data-access policy statements).
      operationId: amazonWebServicesListGremlinQueries
  /loader:
    POST:
      summary: Startloaderjob
      description: >-
        Starts a Neptune bulk loader job to load data from an Amazon S3 bucket
        into a Neptune DB instance. See Using the Amazon Neptune Bulk Loader to
        Ingest Data. When invoking this operation in a Neptune cluster that has
        IAM authentication enabled, the IAM user or role making the request must
        have a policy attached that allows the neptune-db:StartLoaderJob IAM
        action in that cluster.
      operationId: amazonWebServicesStartLoaderJob
  /ml/dataprocessing:
    POST:
      summary: Startmldataprocessingjob
      description: >-
        Creates a new Neptune ML data processing job for processing the graph
        data exported from Neptune for training. See The dataprocessing command.
        When invoking this operation in a Neptune cluster that has IAM
        authentication enabled, the IAM user or role making the request must
        have a policy attached that allows the
        neptune-db:StartMLModelDataProcessingJob IAM action in that cluster.
      operationId: amazonWebServicesStartMLDataProcessingJob
  /ml/modeltraining:
    POST:
      summary: Startmlmodeltrainingjob
      description: >-
        Creates a new Neptune ML model training job. See Model training using
        the modeltraining command. When invoking this operation in a Neptune
        cluster that has IAM authentication enabled, the IAM user or role making
        the request must have a policy attached that allows the
        neptune-db:StartMLModelTrainingJob IAM action in that cluster.
      operationId: amazonWebServicesStartMLModelTrainingJob
  /ml/modeltransform:
    POST:
      summary: Startmlmodeltransformjob
      description: >-
        Creates a new model transform job. See Use a trained model to generate
        new model artifacts. When invoking this operation in a Neptune cluster
        that has IAM authentication enabled, the IAM user or role making the
        request must have a policy attached that allows the
        neptune-db:StartMLModelTransformJob IAM action in that cluster.
      operationId: amazonWebServicesStartMLModelTransformJob
  /opencypher/status:
    GET:
      summary: Listopencypherqueries
      description: >-
        Lists active openCypher queries. See Neptune openCypher status endpoint
        for more information. When invoking this operation in a Neptune cluster
        that has IAM authentication enabled, the IAM user or role making the
        request must have a policy attached that allows the
        neptune-db:GetQueryStatus IAM action in that cluster. Note that the
        neptune-db:QueryLanguage:OpenCypher IAM condition key can be used in the
        policy document to restrict the use of openCypher queries (see Condition
        keys available in Neptune IAM data-access policy statements).
      operationId: amazonWebServicesListOpenCypherQueries
tags: []
