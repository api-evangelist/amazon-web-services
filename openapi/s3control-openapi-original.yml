openapi: 3.1.0
info:
  title: s3control
  description: >-
    <p> Amazon Web Services S3 Control provides access to Amazon S3 control
    plane actions. </p>
paths:
  /v20180820/accessgrantsinstance/identitycenter:
    DELETE:
      summary: Dissociateaccessgrantsidentitycenter
      description: >-
        Dissociates the Amazon Web Services IAM Identity Center instance from
        the S3 Access Grants instance.   Permissions  You must have the
        s3:DissociateAccessGrantsIdentityCenter permission to use this
        operation.   Additional Permissions  You must have the
        sso:DeleteApplication permission to use this operation.   
      operationId: amazonWebServicesDissociateAccessGrantsIdentityCenter
  /v20180820/accessgrantsinstance/grant:
    POST:
      summary: Createaccessgrant
      description: >-
        Creates an access grant that gives a grantee access to your S3 data. The
        grantee can be an IAM user or role or a directory user, or group. Before
        you can create a grant, you must have an S3 Access Grants instance in
        the same Region as the S3 data. You can create an S3 Access Grants
        instance using the CreateAccessGrantsInstance. You must also have
        registered at least one S3 data location in your S3 Access Grants
        instance using CreateAccessGrantsLocation.   Permissions  You must have
        the s3:CreateAccessGrant permission to use this operation.   Additional
        Permissions  For any directory identity - sso:DescribeInstance and
        sso:DescribeApplication  For directory users -
        identitystore:DescribeUser  For directory groups -
        identitystore:DescribeGroup   
      operationId: amazonWebServicesCreateAccessGrant
  /v20180820/accessgrantsinstance:
    GET:
      summary: Getaccessgrantsinstance
      description: >-
        Retrieves the S3 Access Grants instance for a Region in your account.  
        Permissions  You must have the s3:GetAccessGrantsInstance permission to
        use this operation.   
      operationId: amazonWebServicesGetAccessGrantsInstance
  /v20180820/accessgrantsinstance/location:
    POST:
      summary: Createaccessgrantslocation
      description: >-
        The S3 data location that you would like to register in your S3 Access
        Grants instance. Your S3 data must be in the same Region as your S3
        Access Grants instance. The location can be one of the following:    The
        default S3 location s3://    A bucket - S3://&lt;bucket-name&gt;    A
        bucket and prefix - S3://&lt;bucket-name&gt;/&lt;prefix&gt;    When you
        register a location, you must include the IAM role that has permission
        to manage the S3 location that you are registering. Give S3 Access
        Grants permission to assume this role using a policy. S3 Access Grants
        assumes this role to manage access to the location and to vend temporary
        credentials to grantees or client applications.   Permissions  You must
        have the s3:CreateAccessGrantsLocation permission to use this
        operation.   Additional Permissions  You must also have the following
        permission for the specified IAM role: iam:PassRole   
      operationId: amazonWebServicesCreateAccessGrantsLocation
  /v20180820/accesspoint/{name}:
    GET:
      summary: Getaccesspoint
      description: ' This operation is not supported by directory buckets.  Returns configuration information about the specified access point.  All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived by using the access point ARN, see the Examples section. The following actions are related to GetAccessPoint:    CreateAccessPoint     DeleteAccessPoint     ListAccessPoints   '
      operationId: amazonWebServicesGetAccessPoint
  /v20180820/accesspointforobjectlambda/{name}:
    GET:
      summary: Getaccesspointforobjectlambda
      description: ' This operation is not supported by directory buckets.  Returns configuration information about the specified Object Lambda Access Point The following actions are related to GetAccessPointForObjectLambda:    CreateAccessPointForObjectLambda     DeleteAccessPointForObjectLambda     ListAccessPointsForObjectLambda   '
      operationId: amazonWebServicesGetAccessPointForObjectLambda
  /v20180820/bucket/{name}:
    GET:
      summary: Getbucket
      description: ' Gets an Amazon S3 on Outposts bucket. For more information, see  Using Amazon S3 on Outposts in the Amazon S3 User Guide.  If you are using an identity other than the root user of the Amazon Web Services account that owns the Outposts bucket, the calling identity must have the s3-outposts:GetBucket permissions on the specified Outposts bucket and belong to the Outposts bucket owner''s account in order to use this action. Only users from Outposts bucket owner account with the right permissions can perform actions on an Outposts bucket.   If you don''t have s3-outposts:GetBucket permissions or you''re not using an identity that belongs to the bucket owner''s account, Amazon S3 returns a 403 Access Denied error. The following actions are related to GetBucket for Amazon S3 on Outposts: All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived by using the access point ARN, see the Examples section.    PutObject     CreateBucket     DeleteBucket   '
      operationId: amazonWebServicesGetBucket
  /v20180820/jobs:
    GET:
      summary: Listjobs
      description: >-
        Lists current S3 Batch Operations jobs as well as the jobs that have
        ended within the last 30 days for the Amazon Web Services account making
        the request. For more information, see S3 Batch Operations in the Amazon
        S3 User Guide.  Permissions  To use the ListJobs operation, you must
        have permission to perform the s3:ListJobs action.   Related actions
        include:     CreateJob     DescribeJob     UpdateJobPriority    
        UpdateJobStatus   
      operationId: amazonWebServicesListJobs
  /v20180820/async-requests/mrap/create:
    POST:
      summary: Createmultiregionaccesspoint
      description: ' This operation is not supported by directory buckets.  Creates a Multi-Region Access Point and associates it with the specified buckets. For more information about creating Multi-Region Access Points, see Creating Multi-Region Access Points in the Amazon S3 User Guide. This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see Managing Multi-Region Access Points in the Amazon S3 User Guide. This request is asynchronous, meaning that you might receive a response before the command has completed. When this request provides a response, it provides a token that you can use to monitor the status of the request with DescribeMultiRegionAccessPointOperation. The following actions are related to CreateMultiRegionAccessPoint:    DeleteMultiRegionAccessPoint     DescribeMultiRegionAccessPointOperation     GetMultiRegionAccessPoint     ListMultiRegionAccessPoints   '
      operationId: amazonWebServicesCreateMultiRegionAccessPoint
  /v20180820/storagelensgroup:
    GET:
      summary: Liststoragelensgroups
      description: ' Lists all the Storage Lens groups in the specified home Region.  To use this operation, you must have the permission to perform the s3:ListStorageLensGroups action. For more information about the required Storage Lens Groups permissions, see Setting account permissions to use S3 Storage Lens groups. For information about Storage Lens groups errors, see List of Amazon S3 Storage Lens error codes.'
      operationId: amazonWebServicesListStorageLensGroups
  /v20180820/accessgrantsinstance/grant/{id}:
    GET:
      summary: Getaccessgrant
      description: >-
        Get the details of an access grant from your S3 Access Grants instance. 
        Permissions  You must have the s3:GetAccessGrant permission to use this
        operation.   
      operationId: amazonWebServicesGetAccessGrant
  /v20180820/accessgrantsinstance/resourcepolicy:
    PUT:
      summary: Putaccessgrantsinstanceresourcepolicy
      description: >-
        Updates the resource policy of the S3 Access Grants instance.  
        Permissions  You must have the s3:PutAccessGrantsInstanceResourcePolicy
        permission to use this operation.   
      operationId: amazonWebServicesPutAccessGrantsInstanceResourcePolicy
  /v20180820/accessgrantsinstance/location/{id}:
    PUT:
      summary: Updateaccessgrantslocation
      description: >-
        Updates the IAM role of a registered location in your S3 Access Grants
        instance.  Permissions  You must have the s3:UpdateAccessGrantsLocation
        permission to use this operation.   Additional Permissions  You must
        also have the following permission: iam:PassRole   
      operationId: amazonWebServicesUpdateAccessGrantsLocation
  /v20180820/accesspoint/{name}/policy:
    PUT:
      summary: Putaccesspointpolicy
      description: ' This operation is not supported by directory buckets.  Associates an access policy with the specified access point. Each access point can have only one policy, so a request made to this API replaces any existing policy associated with the specified access point.  All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived by using the access point ARN, see the Examples section. The following actions are related to PutAccessPointPolicy:    GetAccessPointPolicy     DeleteAccessPointPolicy   '
      operationId: amazonWebServicesPutAccessPointPolicy
  /v20180820/accesspointforobjectlambda/{name}/policy:
    PUT:
      summary: Putaccesspointpolicyforobjectlambda
      description: ' This operation is not supported by directory buckets.  Creates or replaces resource policy for an Object Lambda Access Point. For an example policy, see Creating Object Lambda Access Points in the Amazon S3 User Guide. The following actions are related to PutAccessPointPolicyForObjectLambda:    DeleteAccessPointPolicyForObjectLambda     GetAccessPointPolicyForObjectLambda   '
      operationId: amazonWebServicesPutAccessPointPolicyForObjectLambda
  /v20180820/bucket/{name}/lifecycleconfiguration:
    PUT:
      summary: Putbucketlifecycleconfiguration
      description: ' This action puts a lifecycle configuration to an Amazon S3 on Outposts bucket. To put a lifecycle configuration to an S3 bucket, see PutBucketLifecycleConfiguration in the Amazon S3 API Reference.   Creates a new lifecycle configuration for the S3 on Outposts bucket or replaces an existing lifecycle configuration. Outposts buckets only support lifecycle configurations that delete/expire objects after a certain period of time and abort incomplete multipart uploads.  All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived by using the access point ARN, see the Examples section. The following actions are related to PutBucketLifecycleConfiguration:    GetBucketLifecycleConfiguration     DeleteBucketLifecycleConfiguration   '
      operationId: amazonWebServicesPutBucketLifecycleConfiguration
  /v20180820/bucket/{name}/policy:
    PUT:
      summary: Putbucketpolicy
      description: ' This action puts a bucket policy to an Amazon S3 on Outposts bucket. To put a policy on an S3 bucket, see PutBucketPolicy in the Amazon S3 API Reference.   Applies an Amazon S3 bucket policy to an Outposts bucket. For more information, see Using Amazon S3 on Outposts in the Amazon S3 User Guide. If you are using an identity other than the root user of the Amazon Web Services account that owns the Outposts bucket, the calling identity must have the PutBucketPolicy permissions on the specified Outposts bucket and belong to the bucket owner''s account in order to use this action. If you don''t have PutBucketPolicy permissions, Amazon S3 returns a 403 Access Denied error. If you have the correct permissions, but you''re not using an identity that belongs to the bucket owner''s account, Amazon S3 returns a 405 Method Not Allowed error.   As a security precaution, the root user of the Amazon Web Services account that owns a bucket can always use this action, even if the policy explicitly denies the root user the ability to perform this action.   For more information about bucket policies, see Using Bucket Policies and User Policies. All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived by using the access point ARN, see the Examples section. The following actions are related to PutBucketPolicy:    GetBucketPolicy     DeleteBucketPolicy   '
      operationId: amazonWebServicesPutBucketPolicy
  /v20180820/bucket/{name}/replication:
    PUT:
      summary: Putbucketreplication
      description: ' This action creates an Amazon S3 on Outposts bucket''s replication configuration. To create an S3 bucket''s replication configuration, see PutBucketReplication in the Amazon S3 API Reference.   Creates a replication configuration or replaces an existing one. For information about S3 replication on Outposts configuration, see Replicating objects for S3 on Outposts in the Amazon S3 User Guide.  It can take a while to propagate PUT or DELETE requests for a replication configuration to all S3 on Outposts systems. Therefore, the replication configuration that''s returned by a GET request soon after a PUT or DELETE request might return a more recent result than what''s on the Outpost. If an Outpost is offline, the delay in updating the replication configuration on that Outpost can be significant.  Specify the replication configuration in the request body. In the replication configuration, you provide the following information:   The name of the destination bucket or buckets where you want S3 on Outposts to replicate objects   The Identity and Access Management (IAM) role that S3 on Outposts can assume to replicate objects on your behalf   Other relevant information, such as replication rules   A replication configuration must include at least one rule and can contain a maximum of 100. Each rule identifies a subset of objects to replicate by filtering the objects in the source Outposts bucket. To choose additional subsets of objects to replicate, add a rule for each subset. To specify a subset of the objects in the source Outposts bucket to apply a replication rule to, add the Filter element as a child of the Rule element. You can filter objects based on an object key prefix, one or more object tags, or both. When you add the Filter element in the configuration, you must also add the following elements: DeleteMarkerReplication, Status, and Priority. Using PutBucketReplication on Outposts requires that both the source and destination buckets must have versioning enabled. For information about enabling versioning on a bucket, see Managing S3 Versioning for your S3 on Outposts bucket. For information about S3 on Outposts replication failure reasons, see Replication failure reasons in the Amazon S3 User Guide.  Handling Replication of Encrypted Objects  Outposts buckets are encrypted at all times. All the objects in the source Outposts bucket are encrypted and can be replicated. Also, all the replicas in the destination Outposts bucket are encrypted with the same encryption key as the objects in the source Outposts bucket.  Permissions  To create a PutBucketReplication request, you must have s3-outposts:PutReplicationConfiguration permissions for the bucket. The Outposts bucket owner has this permission by default and can grant it to others. For more information about permissions, see Setting up IAM with S3 on Outposts and Managing access to S3 on Outposts buckets.   To perform this operation, the user or role must also have the iam:CreateRole and iam:PassRole permissions. For more information, see Granting a user permissions to pass a role to an Amazon Web Services service.  All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived by using the access point ARN, see the Examples section. The following operations are related to PutBucketReplication:    GetBucketReplication     DeleteBucketReplication   '
      operationId: amazonWebServicesPutBucketReplication
  /v20180820/bucket/{name}/tagging:
    PUT:
      summary: Putbuckettagging
      description: ' This action puts tags on an Amazon S3 on Outposts bucket. To put tags on an S3 bucket, see PutBucketTagging in the Amazon S3 API Reference.   Sets the tags for an S3 on Outposts bucket. For more information, see Using Amazon S3 on Outposts in the Amazon S3 User Guide. Use tags to organize your Amazon Web Services bill to reflect your own cost structure. To do this, sign up to get your Amazon Web Services account bill with tag key values included. Then, to see the cost of combined resources, organize your billing information according to resources with the same tag key values. For example, you can tag several resources with a specific application name, and then organize your billing information to see the total cost of that application across several services. For more information, see Cost allocation and tagging.  Within a bucket, if you add a tag that has the same key as an existing tag, the new value overwrites the old value. For more information, see  Using cost allocation in Amazon S3 bucket tags.  To use this action, you must have permissions to perform the s3-outposts:PutBucketTagging action. The Outposts bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see  Permissions Related to Bucket Subresource Operations and Managing access permissions to your Amazon S3 resources.  PutBucketTagging has the following special errors:   Error code: InvalidTagError    Description: The tag provided was not a valid tag. This error can occur if the tag did not pass input validation. For information about tag restrictions, see  User-Defined Tag Restrictions and  Amazon Web Services-Generated Cost Allocation Tag Restrictions.     Error code: MalformedXMLError    Description: The XML provided does not match the schema.     Error code: OperationAbortedError     Description: A conflicting conditional action is currently in progress against this resource. Try again.     Error code: InternalError    Description: The service was unable to apply the provided tag to the bucket.     All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived by using the access point ARN, see the Examples section. The following actions are related to PutBucketTagging:    GetBucketTagging     DeleteBucketTagging   '
      operationId: amazonWebServicesPutBucketTagging
  /v20180820/jobs/{id}/tagging:
    PUT:
      summary: Putjobtagging
      description: >-
        Sets the supplied tag-set on an S3 Batch Operations job. A tag is a
        key-value pair. You can associate S3 Batch Operations tags with any job
        by sending a PUT request against the tagging subresource that is
        associated with the job. To modify the existing tag set, you can either
        replace the existing tag set entirely, or make changes within the
        existing tag set by retrieving the existing tag set using GetJobTagging,
        modify that tag set, and use this operation to replace the tag set with
        the one you modified. For more information, see Controlling access and
        labeling jobs using tags in the Amazon S3 User Guide.     If you send
        this request with an empty tag set, Amazon S3 deletes the existing tag
        set on the Batch Operations job. If you use this method, you are charged
        for a Tier 1 Request (PUT). For more information, see Amazon S3
        pricing.   For deleting existing tags for your Batch Operations job, a
        DeleteJobTagging request is preferred because it achieves the same
        result without incurring charges.   A few things to consider about using
        tags:   Amazon S3 limits the maximum number of tags to 50 tags per
        job.   You can associate up to 50 tags with a job as long as they have
        unique tag keys.   A tag key can be up to 128 Unicode characters in
        length, and tag values can be up to 256 Unicode characters in length.  
        The key and values are case sensitive.   For tagging-related
        restrictions related to characters and encodings, see User-Defined Tag
        Restrictions in the Billing and Cost Management User Guide.      
        Permissions  To use the PutJobTagging operation, you must have
        permission to perform the s3:PutJobTagging action.   Related actions
        include:    CreateJob     GetJobTagging     DeleteJobTagging   
      operationId: amazonWebServicesPutJobTagging
  /v20180820/async-requests/mrap/delete:
    POST:
      summary: Deletemultiregionaccesspoint
      description: ' This operation is not supported by directory buckets.  Deletes a Multi-Region Access Point. This action does not delete the buckets associated with the Multi-Region Access Point, only the Multi-Region Access Point itself. This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see Managing Multi-Region Access Points in the Amazon S3 User Guide. This request is asynchronous, meaning that you might receive a response before the command has completed. When this request provides a response, it provides a token that you can use to monitor the status of the request with DescribeMultiRegionAccessPointOperation. The following actions are related to DeleteMultiRegionAccessPoint:    CreateMultiRegionAccessPoint     DescribeMultiRegionAccessPointOperation     GetMultiRegionAccessPoint     ListMultiRegionAccessPoints   '
      operationId: amazonWebServicesDeleteMultiRegionAccessPoint
  /v20180820/configuration/publicAccessBlock:
    PUT:
      summary: Putpublicaccessblock
      description: ' This operation is not supported by directory buckets.  Creates or modifies the PublicAccessBlock configuration for an Amazon Web Services account. For this operation, users must have the s3:PutAccountPublicAccessBlock permission. For more information, see  Using Amazon S3 block public access. Related actions include:    GetPublicAccessBlock     DeletePublicAccessBlock   '
      operationId: amazonWebServicesPutPublicAccessBlock
  /v20180820/storagelens/{storagelensid}:
    PUT:
      summary: Putstoragelensconfiguration
      description: ' This operation is not supported by directory buckets.  Puts an Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see Working with Amazon S3 Storage Lens in the Amazon S3 User Guide. For a complete list of S3 Storage Lens metrics, see S3 Storage Lens metrics glossary in the Amazon S3 User Guide.  To use this action, you must have permission to perform the s3:PutStorageLensConfiguration action. For more information, see Setting permissions to use Amazon S3 Storage Lens in the Amazon S3 User Guide. '
      operationId: amazonWebServicesPutStorageLensConfiguration
  /v20180820/storagelens/{storagelensid}/tagging:
    PUT:
      summary: Putstoragelensconfigurationtagging
      description: ' This operation is not supported by directory buckets.  Put or replace tags on an existing Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see Assessing your storage activity and usage with Amazon S3 Storage Lens  in the Amazon S3 User Guide.  To use this action, you must have permission to perform the s3:PutStorageLensConfigurationTagging action. For more information, see Setting permissions to use Amazon S3 Storage Lens in the Amazon S3 User Guide. '
      operationId: amazonWebServicesPutStorageLensConfigurationTagging
  /v20180820/storagelensgroup/{name}:
    PUT:
      summary: Updatestoragelensgroup
      description: ' Updates the existing Storage Lens group. To use this operation, you must have the permission to perform the s3:UpdateStorageLensGroup action. For more information about the required Storage Lens Groups permissions, see Setting account permissions to use S3 Storage Lens groups. For information about Storage Lens groups errors, see List of Amazon S3 Storage Lens error codes.'
      operationId: amazonWebServicesUpdateStorageLensGroup
  /v20180820/jobs/{id}:
    GET:
      summary: Describejob
      description: >-
        Retrieves the configuration parameters and status for a Batch Operations
        job. For more information, see S3 Batch Operations in the Amazon S3 User
        Guide.  Permissions  To use the DescribeJob operation, you must have
        permission to perform the s3:DescribeJob action.   Related actions
        include:    CreateJob     ListJobs     UpdateJobPriority    
        UpdateJobStatus   
      operationId: amazonWebServicesDescribeJob
  /v20180820/async-requests/mrap/{request_token+}:
    GET:
      summary: Describemultiregionaccesspointoperation
      description: ' This operation is not supported by directory buckets.  Retrieves the status of an asynchronous request to manage a Multi-Region Access Point. For more information about managing Multi-Region Access Points and how asynchronous requests work, see Managing Multi-Region Access Points in the Amazon S3 User Guide. The following actions are related to GetMultiRegionAccessPoint:    CreateMultiRegionAccessPoint     DeleteMultiRegionAccessPoint     GetMultiRegionAccessPoint     ListMultiRegionAccessPoints   '
      operationId: amazonWebServicesDescribeMultiRegionAccessPointOperation
  /v20180820/accessgrantsinstance/prefix:
    GET:
      summary: Getaccessgrantsinstanceforprefix
      description: >-
        Retrieve the S3 Access Grants instance that contains a particular
        prefix.   Permissions  You must have the
        s3:GetAccessGrantsInstanceForPrefix permission for the caller account to
        use this operation.   Additional Permissions  The prefix owner account
        must grant you the following permissions to their S3 Access Grants
        instance: s3:GetAccessGrantsInstanceForPrefix.   
      operationId: amazonWebServicesGetAccessGrantsInstanceForPrefix
  /v20180820/accesspointforobjectlambda/{name}/configuration:
    PUT:
      summary: Putaccesspointconfigurationforobjectlambda
      description: ' This operation is not supported by directory buckets.  Replaces configuration for an Object Lambda Access Point. The following actions are related to PutAccessPointConfigurationForObjectLambda:    GetAccessPointConfigurationForObjectLambda   '
      operationId: amazonWebServicesPutAccessPointConfigurationForObjectLambda
  /v20180820/accesspoint/{name}/policyStatus:
    GET:
      summary: Getaccesspointpolicystatus
      description: ' This operation is not supported by directory buckets.  Indicates whether the specified access point currently has a policy that allows public access. For more information about public access through access points, see Managing Data Access with Amazon S3 access points in the Amazon S3 User Guide.'
      operationId: amazonWebServicesGetAccessPointPolicyStatus
  /v20180820/accesspointforobjectlambda/{name}/policyStatus:
    GET:
      summary: Getaccesspointpolicystatusforobjectlambda
      description: ' This operation is not supported by directory buckets.  Returns the status of the resource policy associated with an Object Lambda Access Point.'
      operationId: amazonWebServicesGetAccessPointPolicyStatusForObjectLambda
  /v20180820/bucket/{name}/versioning:
    PUT:
      summary: Putbucketversioning
      description: ' This operation sets the versioning state for S3 on Outposts buckets only. To set the versioning state for an S3 bucket, see PutBucketVersioning in the Amazon S3 API Reference.   Sets the versioning state for an S3 on Outposts bucket. With S3 Versioning, you can save multiple distinct copies of your objects and recover from unintended user actions and application failures. You can set the versioning state to one of the following:    Enabled - Enables versioning for the objects in the bucket. All objects added to the bucket receive a unique version ID.    Suspended - Suspends versioning for the objects in the bucket. All objects added to the bucket receive the version ID null.   If you''ve never set versioning on your bucket, it has no versioning state. In that case, a  GetBucketVersioning request does not return a versioning state value. When you enable S3 Versioning, for each object in your bucket, you have a current version and zero or more noncurrent versions. You can configure your bucket S3 Lifecycle rules to expire noncurrent versions after a specified time period. For more information, see  Creating and managing a lifecycle configuration for your S3 on Outposts bucket in the Amazon S3 User Guide. If you have an object expiration lifecycle configuration in your non-versioned bucket and you want to maintain the same permanent delete behavior when you enable versioning, you must add a noncurrent expiration policy. The noncurrent expiration lifecycle configuration will manage the deletes of the noncurrent object versions in the version-enabled bucket. For more information, see Versioning in the Amazon S3 User Guide. All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived by using the access point ARN, see the Examples section. The following operations are related to PutBucketVersioning for S3 on Outposts.    GetBucketVersioning     PutBucketLifecycleConfiguration     GetBucketLifecycleConfiguration   '
      operationId: amazonWebServicesPutBucketVersioning
  /v20180820/accessgrantsinstance/dataaccess:
    GET:
      summary: Getdataaccess
      description: >-
        Returns a temporary access credential from S3 Access Grants to the
        grantee or client application. The temporary credential is an Amazon Web
        Services STS token that grants them access to the S3 data.  
        Permissions  You must have the s3:GetDataAccess permission to use this
        operation.   Additional Permissions  The IAM role that S3 Access Grants
        assumes must have the following permissions specified in the trust
        policy when registering the location: sts:AssumeRole, for directory
        users or groups sts:SetContext, and for IAM users or roles
        sts:SourceIdentity.   
      operationId: amazonWebServicesGetDataAccess
  /v20180820/mrap/instances/{name+}:
    GET:
      summary: Getmultiregionaccesspoint
      description: ' This operation is not supported by directory buckets.  Returns configuration information about the specified Multi-Region Access Point. This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see Managing Multi-Region Access Points in the Amazon S3 User Guide. The following actions are related to GetMultiRegionAccessPoint:    CreateMultiRegionAccessPoint     DeleteMultiRegionAccessPoint     DescribeMultiRegionAccessPointOperation     ListMultiRegionAccessPoints   '
      operationId: amazonWebServicesGetMultiRegionAccessPoint
  /v20180820/mrap/instances/{name+}/policy:
    GET:
      summary: Getmultiregionaccesspointpolicy
      description: ' This operation is not supported by directory buckets.  Returns the access control policy of the specified Multi-Region Access Point. This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see Managing Multi-Region Access Points in the Amazon S3 User Guide. The following actions are related to GetMultiRegionAccessPointPolicy:    GetMultiRegionAccessPointPolicyStatus     PutMultiRegionAccessPointPolicy   '
      operationId: amazonWebServicesGetMultiRegionAccessPointPolicy
  /v20180820/mrap/instances/{name+}/policystatus:
    GET:
      summary: Getmultiregionaccesspointpolicystatus
      description: ' This operation is not supported by directory buckets.  Indicates whether the specified Multi-Region Access Point has an access control policy that allows public access. This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see Managing Multi-Region Access Points in the Amazon S3 User Guide. The following actions are related to GetMultiRegionAccessPointPolicyStatus:    GetMultiRegionAccessPointPolicy     PutMultiRegionAccessPointPolicy   '
      operationId: amazonWebServicesGetMultiRegionAccessPointPolicyStatus
  /v20180820/mrap/instances/{mrap+}/routes:
    PATCH:
      summary: Submitmultiregionaccesspointroutes
      description: ' This operation is not supported by directory buckets.  Submits an updated route configuration for a Multi-Region Access Point. This API operation updates the routing status for the specified Regions from active to passive, or from passive to active. A value of 0 indicates a passive status, which means that traffic won''t be routed to the specified Region. A value of 100 indicates an active status, which means that traffic will be routed to the specified Region. At least one Region must be active at all times. When the routing configuration is changed, any in-progress operations (uploads, copies, deletes, and so on) to formerly active Regions will continue to run to their final completion state (success or failure). The routing configurations of any Regions that aren’t specified remain unchanged.  Updated routing configurations might not be immediately applied. It can take up to 2 minutes for your changes to take effect.  To submit routing control changes and failover requests, use the Amazon S3 failover control infrastructure endpoints in these five Amazon Web Services Regions:    us-east-1     us-west-2     ap-southeast-2     ap-northeast-1     eu-west-1     Your Amazon S3 bucket does not need to be in these five Regions. '
      operationId: amazonWebServicesSubmitMultiRegionAccessPointRoutes
  /v20180820/accessgrantsinstance/grants:
    GET:
      summary: Listaccessgrants
      description: >-
        Returns the list of access grants in your S3 Access Grants instance. 
        Permissions  You must have the s3:ListAccessGrants permission to use
        this operation.   
      operationId: amazonWebServicesListAccessGrants
  /v20180820/accessgrantsinstances:
    GET:
      summary: Listaccessgrantsinstances
      description: >-
        Returns a list of S3 Access Grants instances. An S3 Access Grants
        instance serves as a logical grouping for your individual access grants.
        You can only have one S3 Access Grants instance per Region per account. 
        Permissions  You must have the s3:ListAccessGrantsInstances permission
        to use this operation.   
      operationId: amazonWebServicesListAccessGrantsInstances
  /v20180820/accessgrantsinstance/locations:
    GET:
      summary: Listaccessgrantslocations
      description: >-
        Returns a list of the locations registered in your S3 Access Grants
        instance.  Permissions  You must have the s3:ListAccessGrantsLocations
        permission to use this operation.   
      operationId: amazonWebServicesListAccessGrantsLocations
  /v20180820/accesspoint:
    GET:
      summary: Listaccesspoints
      description: ' This operation is not supported by directory buckets.  Returns a list of the access points that are owned by the current account that''s associated with the specified bucket. You can retrieve up to 1000 access points per call. If the specified bucket has more than 1,000 access points (or the number specified in maxResults, whichever is less), the response will include a continuation token that you can use to list the additional access points.  All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived by using the access point ARN, see the Examples section. The following actions are related to ListAccessPoints:    CreateAccessPoint     DeleteAccessPoint     GetAccessPoint   '
      operationId: amazonWebServicesListAccessPoints
  /v20180820/accesspointforobjectlambda:
    GET:
      summary: Listaccesspointsforobjectlambda
      description: ' This operation is not supported by directory buckets.  Returns some or all (up to 1,000) access points associated with the Object Lambda Access Point per call. If there are more access points than what can be returned in one call, the response will include a continuation token that you can use to list the additional access points. The following actions are related to ListAccessPointsForObjectLambda:    CreateAccessPointForObjectLambda     DeleteAccessPointForObjectLambda     GetAccessPointForObjectLambda   '
      operationId: amazonWebServicesListAccessPointsForObjectLambda
  /v20180820/mrap/instances:
    GET:
      summary: Listmultiregionaccesspoints
      description: ' This operation is not supported by directory buckets.  Returns a list of the Multi-Region Access Points currently associated with the specified Amazon Web Services account. Each call can return up to 100 Multi-Region Access Points, the maximum number of Multi-Region Access Points that can be associated with a single account. This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see Managing Multi-Region Access Points in the Amazon S3 User Guide. The following actions are related to ListMultiRegionAccessPoint:    CreateMultiRegionAccessPoint     DeleteMultiRegionAccessPoint     DescribeMultiRegionAccessPointOperation     GetMultiRegionAccessPoint   '
      operationId: amazonWebServicesListMultiRegionAccessPoints
  /v20180820/bucket:
    GET:
      summary: Listregionalbuckets
      description: ' This operation is not supported by directory buckets.  Returns a list of all Outposts buckets in an Outpost that are owned by the authenticated sender of the request. For more information, see Using Amazon S3 on Outposts in the Amazon S3 User Guide. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and x-amz-outpost-id in your request, see the Examples section.'
      operationId: amazonWebServicesListRegionalBuckets
  /v20180820/storagelens:
    GET:
      summary: Liststoragelensconfigurations
      description: ' This operation is not supported by directory buckets.  Gets a list of Amazon S3 Storage Lens configurations. For more information about S3 Storage Lens, see Assessing your storage activity and usage with Amazon S3 Storage Lens  in the Amazon S3 User Guide.  To use this action, you must have permission to perform the s3:ListStorageLensConfigurations action. For more information, see Setting permissions to use Amazon S3 Storage Lens in the Amazon S3 User Guide. '
      operationId: amazonWebServicesListStorageLensConfigurations
  /v20180820/tags/{resourceArn+}:
    DELETE:
      summary: Untagresource
      description: ' This operation removes the specified Amazon Web Services resource tags from an S3 resource. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources.   This operation is only supported for S3 Storage Lens groups and for S3 Access Grants. The tagged resource can be an S3 Storage Lens group or S3 Access Grants instance, registered location, or grant.    Permissions  You must have the s3:UntagResource permission to use this operation.    For more information about the required Storage Lens Groups permissions, see Setting account permissions to use S3 Storage Lens groups. For information about S3 Tagging errors, see List of Amazon S3 Tagging error codes.'
      operationId: amazonWebServicesUntagResource
  /v20180820/async-requests/mrap/put-policy:
    POST:
      summary: Putmultiregionaccesspointpolicy
      description: ' This operation is not supported by directory buckets.  Associates an access control policy with the specified Multi-Region Access Point. Each Multi-Region Access Point can have only one policy, so a request made to this action replaces any existing policy that is associated with the specified Multi-Region Access Point. This action will always be routed to the US West (Oregon) Region. For more information about the restrictions around managing Multi-Region Access Points, see Managing Multi-Region Access Points in the Amazon S3 User Guide. The following actions are related to PutMultiRegionAccessPointPolicy:    GetMultiRegionAccessPointPolicy     GetMultiRegionAccessPointPolicyStatus   '
      operationId: amazonWebServicesPutMultiRegionAccessPointPolicy
  /v20180820/jobs/{id}/priority:
    POST:
      summary: Updatejobpriority
      description: >-
        Updates an existing S3 Batch Operations job's priority. For more
        information, see S3 Batch Operations in the Amazon S3 User Guide. 
        Permissions  To use the UpdateJobPriority operation, you must have
        permission to perform the s3:UpdateJobPriority action.   Related actions
        include:    CreateJob     ListJobs     DescribeJob    
        UpdateJobStatus   
      operationId: amazonWebServicesUpdateJobPriority
  /v20180820/jobs/{id}/status:
    POST:
      summary: Updatejobstatus
      description: >-
        Updates the status for the specified job. Use this operation to confirm
        that you want to run a job or to cancel an existing job. For more
        information, see S3 Batch Operations in the Amazon S3 User Guide. 
        Permissions  To use the UpdateJobStatus operation, you must have
        permission to perform the s3:UpdateJobStatus action.   Related actions
        include:    CreateJob     ListJobs     DescribeJob    
        UpdateJobStatus   
      operationId: amazonWebServicesUpdateJobStatus
tags: []
