openapi: 3.1.0
info:
  title: imagebuilder
  description: >-
    <p>EC2 Image Builder is a fully managed Amazon Web Services service that
    makes it easier to automate the creation, management, and deployment of
    customized, secure, and up-to-date "golden" server images that are
    pre-installed and pre-configured with software and settings to meet specific
    IT standards.</p>
paths:
  /CancelImageCreation:
    PUT:
      summary: Cancelimagecreation
      description: >-
        CancelImageCreation cancels the creation of Image. This operation can
        only be used on images in a non-terminal state.
      operationId: amazonWebServicesCancelImageCreation
  /CancelLifecycleExecution:
    PUT:
      summary: Cancellifecycleexecution
      description: Cancel a specific image lifecycle policy runtime instance.
      operationId: amazonWebServicesCancelLifecycleExecution
  /CreateComponent:
    PUT:
      summary: Createcomponent
      description: >-
        Creates a new component that can be used to build, validate, test, and
        assess your image. The component is based on a YAML document that you
        specify using exactly one of the following methods:   Inline, using the
        data property in the request body.   A URL that points to a YAML
        document file stored in Amazon S3, using the uri property in the request
        body.  
      operationId: amazonWebServicesCreateComponent
  /CreateContainerRecipe:
    PUT:
      summary: Createcontainerrecipe
      description: >-
        Creates a new container recipe. Container recipes define how images are
        configured, tested, and assessed.
      operationId: amazonWebServicesCreateContainerRecipe
  /CreateDistributionConfiguration:
    PUT:
      summary: Createdistributionconfiguration
      description: >-
        Creates a new distribution configuration. Distribution configurations
        define and configure the outputs of your pipeline.
      operationId: amazonWebServicesCreateDistributionConfiguration
  /CreateImage:
    PUT:
      summary: Createimage
      description: >-
        Creates a new image. This request will create a new image along with all
        of the configured output resources defined in the distribution
        configuration. You must specify exactly one recipe for your image, using
        either a ContainerRecipeArn or an ImageRecipeArn.
      operationId: amazonWebServicesCreateImage
  /CreateImagePipeline:
    PUT:
      summary: Createimagepipeline
      description: >-
        Creates a new image pipeline. Image pipelines enable you to automate the
        creation and distribution of images.
      operationId: amazonWebServicesCreateImagePipeline
  /CreateImageRecipe:
    PUT:
      summary: Createimagerecipe
      description: >-
        Creates a new image recipe. Image recipes define how images are
        configured, tested, and assessed.
      operationId: amazonWebServicesCreateImageRecipe
  /CreateInfrastructureConfiguration:
    PUT:
      summary: Createinfrastructureconfiguration
      description: >-
        Creates a new infrastructure configuration. An infrastructure
        configuration defines the environment in which your image will be built
        and tested.
      operationId: amazonWebServicesCreateInfrastructureConfiguration
  /CreateLifecyclePolicy:
    PUT:
      summary: Createlifecyclepolicy
      description: Create a lifecycle policy resource.
      operationId: amazonWebServicesCreateLifecyclePolicy
  /CreateWorkflow:
    PUT:
      summary: Createworkflow
      description: Create a new workflow or a new version of an existing workflow.
      operationId: amazonWebServicesCreateWorkflow
  /DeleteComponent:
    DELETE:
      summary: Deletecomponent
      description: Deletes a component build version.
      operationId: amazonWebServicesDeleteComponent
  /DeleteContainerRecipe:
    DELETE:
      summary: Deletecontainerrecipe
      description: Deletes a container recipe.
      operationId: amazonWebServicesDeleteContainerRecipe
  /DeleteDistributionConfiguration:
    DELETE:
      summary: Deletedistributionconfiguration
      description: Deletes a distribution configuration.
      operationId: amazonWebServicesDeleteDistributionConfiguration
  /DeleteImage:
    DELETE:
      summary: Deleteimage
      description: >-
        Deletes an Image Builder image resource. This does not delete any EC2
        AMIs or ECR container images that are created during the image build
        process. You must clean those up separately, using the appropriate
        Amazon EC2 or Amazon ECR console actions, or API or CLI commands.   To
        deregister an EC2 Linux AMI, see Deregister your Linux AMI in the 
        Amazon EC2 User Guide .   To deregister an EC2 Windows AMI, see
        Deregister your Windows AMI in the  Amazon EC2 Windows Guide .   To
        delete a container image from Amazon ECR, see Deleting an image in the
        Amazon ECR User Guide.  
      operationId: amazonWebServicesDeleteImage
  /DeleteImagePipeline:
    DELETE:
      summary: Deleteimagepipeline
      description: Deletes an image pipeline.
      operationId: amazonWebServicesDeleteImagePipeline
  /DeleteImageRecipe:
    DELETE:
      summary: Deleteimagerecipe
      description: Deletes an image recipe.
      operationId: amazonWebServicesDeleteImageRecipe
  /DeleteInfrastructureConfiguration:
    DELETE:
      summary: Deleteinfrastructureconfiguration
      description: Deletes an infrastructure configuration.
      operationId: amazonWebServicesDeleteInfrastructureConfiguration
  /DeleteLifecyclePolicy:
    DELETE:
      summary: Deletelifecyclepolicy
      description: Delete the specified lifecycle policy resource.
      operationId: amazonWebServicesDeleteLifecyclePolicy
  /DeleteWorkflow:
    DELETE:
      summary: Deleteworkflow
      description: Deletes a specific workflow resource.
      operationId: amazonWebServicesDeleteWorkflow
  /GetComponent:
    GET:
      summary: Getcomponent
      description: Gets a component object.
      operationId: amazonWebServicesGetComponent
  /GetComponentPolicy:
    GET:
      summary: Getcomponentpolicy
      description: Gets a component policy.
      operationId: amazonWebServicesGetComponentPolicy
  /GetContainerRecipe:
    GET:
      summary: Getcontainerrecipe
      description: Retrieves a container recipe.
      operationId: amazonWebServicesGetContainerRecipe
  /GetContainerRecipePolicy:
    GET:
      summary: Getcontainerrecipepolicy
      description: Retrieves the policy for a container recipe.
      operationId: amazonWebServicesGetContainerRecipePolicy
  /GetDistributionConfiguration:
    GET:
      summary: Getdistributionconfiguration
      description: Gets a distribution configuration.
      operationId: amazonWebServicesGetDistributionConfiguration
  /GetImage:
    GET:
      summary: Getimage
      description: Gets an image.
      operationId: amazonWebServicesGetImage
  /GetImagePipeline:
    GET:
      summary: Getimagepipeline
      description: Gets an image pipeline.
      operationId: amazonWebServicesGetImagePipeline
  /GetImagePolicy:
    GET:
      summary: Getimagepolicy
      description: Gets an image policy.
      operationId: amazonWebServicesGetImagePolicy
  /GetImageRecipe:
    GET:
      summary: Getimagerecipe
      description: Gets an image recipe.
      operationId: amazonWebServicesGetImageRecipe
  /GetImageRecipePolicy:
    GET:
      summary: Getimagerecipepolicy
      description: Gets an image recipe policy.
      operationId: amazonWebServicesGetImageRecipePolicy
  /GetInfrastructureConfiguration:
    GET:
      summary: Getinfrastructureconfiguration
      description: Gets an infrastructure configuration.
      operationId: amazonWebServicesGetInfrastructureConfiguration
  /GetLifecycleExecution:
    GET:
      summary: Getlifecycleexecution
      description: >-
        Get the runtime information that was logged for a specific runtime
        instance of the lifecycle policy.
      operationId: amazonWebServicesGetLifecycleExecution
  /GetLifecyclePolicy:
    GET:
      summary: Getlifecyclepolicy
      description: Get details for the specified image lifecycle policy.
      operationId: amazonWebServicesGetLifecyclePolicy
  /GetWorkflow:
    GET:
      summary: Getworkflow
      description: Get a workflow resource object.
      operationId: amazonWebServicesGetWorkflow
  /GetWorkflowExecution:
    GET:
      summary: Getworkflowexecution
      description: >-
        Get the runtime information that was logged for a specific runtime
        instance of the workflow.
      operationId: amazonWebServicesGetWorkflowExecution
  /GetWorkflowStepExecution:
    GET:
      summary: Getworkflowstepexecution
      description: >-
        Get the runtime information that was logged for a specific runtime
        instance of the workflow step.
      operationId: amazonWebServicesGetWorkflowStepExecution
  /ImportComponent:
    PUT:
      summary: Importcomponent
      description: Imports a component and transforms its data into a component document.
      operationId: amazonWebServicesImportComponent
  /ImportVmImage:
    PUT:
      summary: Importvmimage
      description: >-
        When you export your virtual machine (VM) from its virtualization
        environment, that process creates a set of one or more disk container
        files that act as snapshots of your VMâ€™s environment, settings, and
        data. The Amazon EC2 API ImportImage action uses those files to import
        your VM and create an AMI. To import using the CLI command, see
        import-image  You can reference the task ID from the VM import to pull
        in the AMI that the import created as the base image for your Image
        Builder recipe.
      operationId: amazonWebServicesImportVmImage
  /ListComponentBuildVersions:
    POST:
      summary: Listcomponentbuildversions
      description: >-
        Returns the list of component build versions for the specified semantic
        version.  The semantic version has four nodes:
        &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign
        values for the first three, and can filter on all of them.  Filtering:
        With semantic versioning, you have the flexibility to use wildcards (x)
        to specify the most recent versions or nodes when selecting the base
        image or components for your recipe. When you use a wildcard in any
        node, all nodes to the right of the first wildcard must also be
        wildcards. 
      operationId: amazonWebServicesListComponentBuildVersions
  /ListComponents:
    POST:
      summary: Listcomponents
      description: >-
        Returns the list of components that can be filtered by name, or by using
        the listed filters to streamline results. Newly created components can
        take up to two minutes to appear in the ListComponents API Results.  The
        semantic version has four nodes:
        &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign
        values for the first three, and can filter on all of them.  Filtering:
        With semantic versioning, you have the flexibility to use wildcards (x)
        to specify the most recent versions or nodes when selecting the base
        image or components for your recipe. When you use a wildcard in any
        node, all nodes to the right of the first wildcard must also be
        wildcards. 
      operationId: amazonWebServicesListComponents
  /ListContainerRecipes:
    POST:
      summary: Listcontainerrecipes
      description: Returns a list of container recipes.
      operationId: amazonWebServicesListContainerRecipes
  /ListDistributionConfigurations:
    POST:
      summary: Listdistributionconfigurations
      description: Returns a list of distribution configurations.
      operationId: amazonWebServicesListDistributionConfigurations
  /ListImageBuildVersions:
    POST:
      summary: Listimagebuildversions
      description: Returns a list of image build versions.
      operationId: amazonWebServicesListImageBuildVersions
  /ListImagePackages:
    POST:
      summary: Listimagepackages
      description: >-
        List the Packages that are associated with an Image Build Version, as
        determined by Amazon Web Services Systems Manager Inventory at build
        time.
      operationId: amazonWebServicesListImagePackages
  /ListImagePipelineImages:
    POST:
      summary: Listimagepipelineimages
      description: Returns a list of images created by the specified pipeline.
      operationId: amazonWebServicesListImagePipelineImages
  /ListImagePipelines:
    POST:
      summary: Listimagepipelines
      description: Returns a list of image pipelines.
      operationId: amazonWebServicesListImagePipelines
  /ListImageRecipes:
    POST:
      summary: Listimagerecipes
      description: Returns a list of image recipes.
      operationId: amazonWebServicesListImageRecipes
  /ListImageScanFindingAggregations:
    POST:
      summary: Listimagescanfindingaggregations
      description: >-
        Returns a list of image scan aggregations for your account. You can
        filter by the type of key that Image Builder uses to group results. For
        example, if you want to get a list of findings by severity level for one
        of your pipelines, you might specify your pipeline with the
        imagePipelineArn filter. If you don't specify a filter, Image Builder
        returns an aggregation for your account. To streamline results, you can
        use the following filters in your request:    accountId    
        imageBuildVersionArn     imagePipelineArn     vulnerabilityId   
      operationId: amazonWebServicesListImageScanFindingAggregations
  /ListImageScanFindings:
    POST:
      summary: Listimagescanfindings
      description: Returns a list of image scan findings for your account.
      operationId: amazonWebServicesListImageScanFindings
  /ListImages:
    POST:
      summary: Listimages
      description: >-
        Returns the list of images that you have access to. Newly created images
        can take up to two minutes to appear in the ListImages API Results.
      operationId: amazonWebServicesListImages
  /ListInfrastructureConfigurations:
    POST:
      summary: Listinfrastructureconfigurations
      description: Returns a list of infrastructure configurations.
      operationId: amazonWebServicesListInfrastructureConfigurations
  /ListLifecycleExecutionResources:
    POST:
      summary: Listlifecycleexecutionresources
      description: >-
        List resources that the runtime instance of the image lifecycle
        identified for lifecycle actions.
      operationId: amazonWebServicesListLifecycleExecutionResources
  /ListLifecycleExecutions:
    POST:
      summary: Listlifecycleexecutions
      description: Get the lifecycle runtime history for the specified resource.
      operationId: amazonWebServicesListLifecycleExecutions
  /ListLifecyclePolicies:
    POST:
      summary: Listlifecyclepolicies
      description: Get a list of lifecycle policies in your Amazon Web Services account.
      operationId: amazonWebServicesListLifecyclePolicies
  /tags/{resourceArn}:
    DELETE:
      summary: Untagresource
      description: Removes a tag from a resource.
      operationId: amazonWebServicesUntagResource
  /ListWaitingWorkflowSteps:
    POST:
      summary: Listwaitingworkflowsteps
      description: >-
        Get a list of workflow steps that are waiting for action for workflows
        in your Amazon Web Services account.
      operationId: amazonWebServicesListWaitingWorkflowSteps
  /ListWorkflowBuildVersions:
    POST:
      summary: Listworkflowbuildversions
      description: Returns a list of build versions for a specific workflow resource.
      operationId: amazonWebServicesListWorkflowBuildVersions
  /ListWorkflowExecutions:
    POST:
      summary: Listworkflowexecutions
      description: >-
        Returns a list of workflow runtime instance metadata objects for a
        specific image build version.
      operationId: amazonWebServicesListWorkflowExecutions
  /ListWorkflowStepExecutions:
    POST:
      summary: Listworkflowstepexecutions
      description: >-
        Returns runtime data for each step in a runtime instance of the workflow
        that you specify in the request.
      operationId: amazonWebServicesListWorkflowStepExecutions
  /ListWorkflows:
    POST:
      summary: Listworkflows
      description: Lists workflow build versions based on filtering parameters.
      operationId: amazonWebServicesListWorkflows
  /PutComponentPolicy:
    PUT:
      summary: Putcomponentpolicy
      description: >-
        Applies a policy to a component. We recommend that you call the RAM API
        CreateResourceShare to share resources. If you call the Image Builder
        API PutComponentPolicy, you must also call the RAM API
        PromoteResourceShareCreatedFromPolicy in order for the resource to be
        visible to all principals with whom the resource is shared.
      operationId: amazonWebServicesPutComponentPolicy
  /PutContainerRecipePolicy:
    PUT:
      summary: Putcontainerrecipepolicy
      description: >-
        Applies a policy to a container image. We recommend that you call the
        RAM API CreateResourceShare
        (https://docs.aws.amazon.com//ram/latest/APIReference/API_CreateResourceShare.html)
        to share resources. If you call the Image Builder API
        PutContainerImagePolicy, you must also call the RAM API
        PromoteResourceShareCreatedFromPolicy
        (https://docs.aws.amazon.com//ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html)
        in order for the resource to be visible to all principals with whom the
        resource is shared.
      operationId: amazonWebServicesPutContainerRecipePolicy
  /PutImagePolicy:
    PUT:
      summary: Putimagepolicy
      description: >-
        Applies a policy to an image. We recommend that you call the RAM API
        CreateResourceShare to share resources. If you call the Image Builder
        API PutImagePolicy, you must also call the RAM API
        PromoteResourceShareCreatedFromPolicy in order for the resource to be
        visible to all principals with whom the resource is shared.
      operationId: amazonWebServicesPutImagePolicy
  /PutImageRecipePolicy:
    PUT:
      summary: Putimagerecipepolicy
      description: >-
        Applies a policy to an image recipe. We recommend that you call the RAM
        API CreateResourceShare to share resources. If you call the Image
        Builder API PutImageRecipePolicy, you must also call the RAM API
        PromoteResourceShareCreatedFromPolicy in order for the resource to be
        visible to all principals with whom the resource is shared.
      operationId: amazonWebServicesPutImageRecipePolicy
  /SendWorkflowStepAction:
    PUT:
      summary: Sendworkflowstepaction
      description: >-
        Pauses or resumes image creation when the associated workflow runs a
        WaitForAction step.
      operationId: amazonWebServicesSendWorkflowStepAction
  /StartImagePipelineExecution:
    PUT:
      summary: Startimagepipelineexecution
      description: Manually triggers a pipeline to create an image.
      operationId: amazonWebServicesStartImagePipelineExecution
  /StartResourceStateUpdate:
    PUT:
      summary: Startresourcestateupdate
      description: >-
        Begin asynchronous resource state update for lifecycle changes to the
        specified image resources.
      operationId: amazonWebServicesStartResourceStateUpdate
  /UpdateDistributionConfiguration:
    PUT:
      summary: Updatedistributionconfiguration
      description: >-
        Updates a new distribution configuration. Distribution configurations
        define and configure the outputs of your pipeline.
      operationId: amazonWebServicesUpdateDistributionConfiguration
  /UpdateImagePipeline:
    PUT:
      summary: Updateimagepipeline
      description: >-
        Updates an image pipeline. Image pipelines enable you to automate the
        creation and distribution of images. You must specify exactly one recipe
        for your image, using either a containerRecipeArn or an imageRecipeArn. 
        UpdateImagePipeline does not support selective updates for the pipeline.
        You must specify all of the required properties in the update request,
        not just the properties that have changed. 
      operationId: amazonWebServicesUpdateImagePipeline
  /UpdateInfrastructureConfiguration:
    PUT:
      summary: Updateinfrastructureconfiguration
      description: >-
        Updates a new infrastructure configuration. An infrastructure
        configuration defines the environment in which your image will be built
        and tested.
      operationId: amazonWebServicesUpdateInfrastructureConfiguration
  /UpdateLifecyclePolicy:
    PUT:
      summary: Updatelifecyclepolicy
      description: Update the specified lifecycle policy.
      operationId: amazonWebServicesUpdateLifecyclePolicy
tags: []
