openapi: 3.1.0
info:
  title: guardduty
  description: >-
    <p>Amazon GuardDuty is a continuous security monitoring service that
    analyzes and processes the following foundational data sources - VPC flow
    logs, Amazon Web Services CloudTrail management event logs, CloudTrail S3
    data event logs, EKS audit logs, DNS logs, Amazon EBS volume data, runtime
    activity belonging to container workloads, such as Amazon EKS, Amazon ECS
    (including Amazon Web Services Fargate), and Amazon EC2 instances. It uses
    threat intelligence feeds, such as lists of malicious IPs and domains, and
    machine learning to identify unexpected, potentially unauthorized, and
    malicious activity within your Amazon Web Services environment. This can
    include issues like escalations of privileges, uses of exposed credentials,
    or communication with malicious IPs, domains, or presence of malware on your
    Amazon EC2 instances and container workloads. For example, GuardDuty can
    detect compromised EC2 instances and container workloads serving malware, or
    mining bitcoin. </p> <p>GuardDuty also monitors Amazon Web Services account
    access behavior for signs of compromise, such as unauthorized infrastructure
    deployments like EC2 instances deployed in a Region that has never been
    used, or unusual API calls like a password policy change to reduce password
    strength. </p> <p>GuardDuty informs you about the status of your Amazon Web
    Services environment by producing security findings that you can view in the
    GuardDuty console or through Amazon EventBridge. For more information, see
    the <i> <a
    href="https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html">Amazon
    GuardDuty User Guide</a> </i>. </p>
paths:
  /detector/{detectorId}/administrator:
    GET:
      summary: Getadministratoraccount
      description: >-
        Provides the details of the GuardDuty administrator account associated
        with the current GuardDuty member account.  If the organization's
        management account or a delegated administrator runs this API, it will
        return success (HTTP 200) but no content. 
      operationId: amazonWebServicesGetAdministratorAccount
  /detector/{detectorId}/master:
    GET:
      summary: Getmasteraccount
      description: >-
        Provides the details for the GuardDuty administrator account associated
        with the current GuardDuty member account.
      operationId: amazonWebServicesGetMasterAccount
  /detector/{detectorId}/findings/archive:
    POST:
      summary: Archivefindings
      description: >-
        Archives GuardDuty findings that are specified by the list of finding
        IDs.  Only the administrator account can archive findings. Member
        accounts don't have permission to archive findings from their accounts. 
      operationId: amazonWebServicesArchiveFindings
  /detector:
    GET:
      summary: Listdetectors
      description: >-
        Lists detectorIds of all the existing Amazon GuardDuty detector
        resources.
      operationId: amazonWebServicesListDetectors
  /detector/{detectorId}/filter:
    GET:
      summary: Listfilters
      description: Returns a paginated list of the current filters.
      operationId: amazonWebServicesListFilters
  /detector/{detectorId}/ipset:
    GET:
      summary: Listipsets
      description: >-
        Lists the IPSets of the GuardDuty service specified by the detector ID.
        If you use this operation from a member account, the IPSets returned are
        the IPSets from the associated administrator account.
      operationId: amazonWebServicesListIPSets
  /detector/{detectorId}/member:
    GET:
      summary: Listmembers
      description: >-
        Lists details about all member accounts for the current GuardDuty
        administrator account.
      operationId: amazonWebServicesListMembers
  /detector/{detectorId}/publishingDestination:
    GET:
      summary: Listpublishingdestinations
      description: >-
        Returns a list of publishing destinations associated with the specified
        detectorId.
      operationId: amazonWebServicesListPublishingDestinations
  /detector/{detectorId}/findings/create:
    POST:
      summary: Createsamplefindings
      description: >-
        Generates sample findings of types specified by the list of finding
        types. If 'NULL' is specified for findingTypes, the API generates sample
        findings of all supported finding types.
      operationId: amazonWebServicesCreateSampleFindings
  /detector/{detectorId}/threatintelset:
    GET:
      summary: Listthreatintelsets
      description: >-
        Lists the ThreatIntelSets of the GuardDuty service specified by the
        detector ID. If you use this operation from a member account, the
        ThreatIntelSets associated with the administrator account are returned.
      operationId: amazonWebServicesListThreatIntelSets
  /invitation/decline:
    POST:
      summary: Declineinvitations
      description: >-
        Declines invitations sent to the current member account by Amazon Web
        Services accounts specified by their account IDs.
      operationId: amazonWebServicesDeclineInvitations
  /detector/{detectorId}:
    POST:
      summary: Updatedetector
      description: >-
        Updates the Amazon GuardDuty detector specified by the detectorId. There
        might be regional differences because some data sources might not be
        available in all the Amazon Web Services Regions where GuardDuty is
        presently supported. For more information, see Regions and endpoints.
      operationId: amazonWebServicesUpdateDetector
  /detector/{detectorId}/filter/{filterName}:
    POST:
      summary: Updatefilter
      description: Updates the filter specified by the filter name.
      operationId: amazonWebServicesUpdateFilter
  /detector/{detectorId}/ipset/{ipSetId}:
    POST:
      summary: Updateipset
      description: Updates the IPSet specified by the IPSet ID.
      operationId: amazonWebServicesUpdateIPSet
  /invitation/delete:
    POST:
      summary: Deleteinvitations
      description: >-
        Deletes invitations sent to the current member account by Amazon Web
        Services accounts specified by their account IDs.
      operationId: amazonWebServicesDeleteInvitations
  /detector/{detectorId}/member/delete:
    POST:
      summary: Deletemembers
      description: >-
        Deletes GuardDuty member accounts (to the current GuardDuty
        administrator account) specified by the account IDs. With
        autoEnableOrganizationMembers configuration for your organization set to
        ALL, you'll receive an error if you attempt to disable GuardDuty for a
        member account in your organization.
      operationId: amazonWebServicesDeleteMembers
  /detector/{detectorId}/publishingDestination/{destinationId}:
    POST:
      summary: Updatepublishingdestination
      description: >-
        Updates information about the publishing destination specified by the
        destinationId.
      operationId: amazonWebServicesUpdatePublishingDestination
  /detector/{detectorId}/threatintelset/{threatIntelSetId}:
    POST:
      summary: Updatethreatintelset
      description: Updates the ThreatIntelSet specified by the ThreatIntelSet ID.
      operationId: amazonWebServicesUpdateThreatIntelSet
  /detector/{detectorId}/malware-scans:
    POST:
      summary: Describemalwarescans
      description: >-
        Returns a list of malware scans. Each member account can view the
        malware scans for their own accounts. An administrator can view the
        malware scans for all the member accounts. There might be regional
        differences because some data sources might not be available in all the
        Amazon Web Services Regions where GuardDuty is presently supported. For
        more information, see Regions and endpoints.
      operationId: amazonWebServicesDescribeMalwareScans
  /detector/{detectorId}/admin:
    POST:
      summary: Updateorganizationconfiguration
      description: >-
        Configures the delegated administrator account with the provided values.
        You must provide a value for either autoEnableOrganizationMembers or
        autoEnable, but not both.  There might be regional differences because
        some data sources might not be available in all the Amazon Web Services
        Regions where GuardDuty is presently supported. For more information,
        see Regions and endpoints.
      operationId: amazonWebServicesUpdateOrganizationConfiguration
  /admin/disable:
    POST:
      summary: Disableorganizationadminaccount
      description: >-
        Removes the existing GuardDuty delegated administrator of the
        organization. Only the organization's management account can run this
        API operation.
      operationId: amazonWebServicesDisableOrganizationAdminAccount
  /detector/{detectorId}/administrator/disassociate:
    POST:
      summary: Disassociatefromadministratoraccount
      description: >-
        Disassociates the current GuardDuty member account from its
        administrator account. When you disassociate an invited member from a
        GuardDuty delegated administrator, the member account details obtained
        from the CreateMembers API, including the associated email addresses,
        are retained. This is done so that the delegated administrator can
        invoke the InviteMembers API without the need to invoke the
        CreateMembers API again. To remove the details associated with a member
        account, the delegated administrator must invoke the DeleteMembers API. 
        With autoEnableOrganizationMembers configuration for your organization
        set to ALL, you'll receive an error if you attempt to disable GuardDuty
        in a member account.
      operationId: amazonWebServicesDisassociateFromAdministratorAccount
  /detector/{detectorId}/master/disassociate:
    POST:
      summary: Disassociatefrommasteraccount
      description: >-
        Disassociates the current GuardDuty member account from its
        administrator account. When you disassociate an invited member from a
        GuardDuty delegated administrator, the member account details obtained
        from the CreateMembers API, including the associated email addresses,
        are retained. This is done so that the delegated administrator can
        invoke the InviteMembers API without the need to invoke the
        CreateMembers API again. To remove the details associated with a member
        account, the delegated administrator must invoke the DeleteMembers API.
      operationId: amazonWebServicesDisassociateFromMasterAccount
  /detector/{detectorId}/member/disassociate:
    POST:
      summary: Disassociatemembers
      description: >-
        Disassociates GuardDuty member accounts (from the current administrator
        account) specified by the account IDs. When you disassociate an invited
        member from a GuardDuty delegated administrator, the member account
        details obtained from the CreateMembers API, including the associated
        email addresses, are retained. This is done so that the delegated
        administrator can invoke the InviteMembers API without the need to
        invoke the CreateMembers API again. To remove the details associated
        with a member account, the delegated administrator must invoke the
        DeleteMembers API.  With autoEnableOrganizationMembers configuration for
        your organization set to ALL, you'll receive an error if you attempt to
        disassociate a member account before removing them from your
        organization.
      operationId: amazonWebServicesDisassociateMembers
  /admin/enable:
    POST:
      summary: Enableorganizationadminaccount
      description: >-
        Designates an Amazon Web Services account within the organization as
        your GuardDuty delegated administrator. Only the organization's
        management account can run this API operation.
      operationId: amazonWebServicesEnableOrganizationAdminAccount
  /detector/{detectorId}/coverage/statistics:
    POST:
      summary: Getcoveragestatistics
      description: >-
        Retrieves aggregated statistics for your account. If you are a GuardDuty
        administrator, you can retrieve the statistics for all the resources
        associated with the active member accounts in your organization who have
        enabled Runtime Monitoring and have the GuardDuty security agent running
        on their resources.
      operationId: amazonWebServicesGetCoverageStatistics
  /detector/{detectorId}/findings/get:
    POST:
      summary: Getfindings
      description: Describes Amazon GuardDuty findings specified by finding IDs.
      operationId: amazonWebServicesGetFindings
  /detector/{detectorId}/findings/statistics:
    POST:
      summary: Getfindingsstatistics
      description: >-
        Lists Amazon GuardDuty findings statistics for the specified detector
        ID.
      operationId: amazonWebServicesGetFindingsStatistics
  /invitation/count:
    GET:
      summary: Getinvitationscount
      description: >-
        Returns the count of all GuardDuty membership invitations that were sent
        to the current member account except the currently accepted invitation.
      operationId: amazonWebServicesGetInvitationsCount
  /detector/{detectorId}/malware-scan-settings:
    POST:
      summary: Updatemalwarescansettings
      description: >-
        Updates the malware scan settings. There might be regional differences
        because some data sources might not be available in all the Amazon Web
        Services Regions where GuardDuty is presently supported. For more
        information, see Regions and endpoints.
      operationId: amazonWebServicesUpdateMalwareScanSettings
  /detector/{detectorId}/member/detector/get:
    POST:
      summary: Getmemberdetectors
      description: >-
        Describes which data sources are enabled for the member account's
        detector. There might be regional differences because some data sources
        might not be available in all the Amazon Web Services Regions where
        GuardDuty is presently supported. For more information, see Regions and
        endpoints.
      operationId: amazonWebServicesGetMemberDetectors
  /detector/{detectorId}/member/get:
    POST:
      summary: Getmembers
      description: >-
        Retrieves GuardDuty member accounts (of the current GuardDuty
        administrator account) specified by the account IDs.
      operationId: amazonWebServicesGetMembers
  /organization/statistics:
    GET:
      summary: Getorganizationstatistics
      description: >-
        Retrieves how many active member accounts in your Amazon Web Services
        organization have each feature enabled within GuardDuty. Only a
        delegated GuardDuty administrator of an organization can run this API.
        When you create a new Amazon Web Services organization, it might take up
        to 24 hours to generate the statistics for the entire organization.
      operationId: amazonWebServicesGetOrganizationStatistics
  /detector/{detectorId}/freeTrial/daysRemaining:
    POST:
      summary: Getremainingfreetrialdays
      description: >-
        Provides the number of days left for each data source used in the free
        trial period.
      operationId: amazonWebServicesGetRemainingFreeTrialDays
  /detector/{detectorId}/usage/statistics:
    POST:
      summary: Getusagestatistics
      description: >-
        Lists Amazon GuardDuty usage statistics over the last 30 days for the
        specified detector ID. For newly enabled detectors or data sources, the
        cost returned will include only the usage so far under 30 days. This may
        differ from the cost metrics in the console, which project usage over 30
        days to provide a monthly cost estimate. For more information, see
        Understanding How Usage Costs are Calculated.
      operationId: amazonWebServicesGetUsageStatistics
  /detector/{detectorId}/member/invite:
    POST:
      summary: Invitemembers
      description: >-
        Invites Amazon Web Services accounts to become members of an
        organization administered by the Amazon Web Services account that
        invokes this API. If you are using Amazon Web Services Organizations to
        manage your GuardDuty environment, this step is not needed. For more
        information, see Managing accounts with organizations. To invite Amazon
        Web Services accounts, the first step is to ensure that GuardDuty has
        been enabled in the potential member accounts. You can now invoke this
        API to add accounts by invitation. The invited accounts can either
        accept or decline the invitation from their GuardDuty accounts. Each
        invited Amazon Web Services account can choose to accept the invitation
        from only one Amazon Web Services account. For more information, see
        Managing GuardDuty accounts by invitation. After the invite has been
        accepted and you choose to disassociate a member account (by using
        DisassociateMembers) from your account, the details of the member
        account obtained by invoking CreateMembers, including the associated
        email addresses, will be retained. This is done so that you can invoke
        InviteMembers without the need to invoke CreateMembers again. To remove
        the details associated with a member account, you must also invoke
        DeleteMembers. 
      operationId: amazonWebServicesInviteMembers
  /detector/{detectorId}/coverage:
    POST:
      summary: Listcoverage
      description: >-
        Lists coverage details for your GuardDuty account. If you're a GuardDuty
        administrator, you can retrieve all resources associated with the active
        member accounts in your organization. Make sure the accounts have
        Runtime Monitoring enabled and GuardDuty agent running on their
        resources.
      operationId: amazonWebServicesListCoverage
  /detector/{detectorId}/findings:
    POST:
      summary: Listfindings
      description: Lists Amazon GuardDuty findings for the specified detector ID.
      operationId: amazonWebServicesListFindings
  /invitation:
    GET:
      summary: Listinvitations
      description: >-
        Lists all GuardDuty membership invitations that were sent to the current
        Amazon Web Services account.
      operationId: amazonWebServicesListInvitations
  /admin:
    GET:
      summary: Listorganizationadminaccounts
      description: >-
        Lists the accounts designated as GuardDuty delegated administrators.
        Only the organization's management account can run this API operation.
      operationId: amazonWebServicesListOrganizationAdminAccounts
  /tags/{resourceArn}:
    DELETE:
      summary: Untagresource
      description: Removes tags from a resource.
      operationId: amazonWebServicesUntagResource
  /malware-scan/start:
    POST:
      summary: Startmalwarescan
      description: >-
        Initiates the malware scan. Invoking this API will automatically create
        the Service-linked role  in the corresponding account.
      operationId: amazonWebServicesStartMalwareScan
  /detector/{detectorId}/member/start:
    POST:
      summary: Startmonitoringmembers
      description: >-
        Turns on GuardDuty monitoring of the specified member accounts. Use this
        operation to restart monitoring of accounts that you stopped monitoring
        with the StopMonitoringMembers operation.
      operationId: amazonWebServicesStartMonitoringMembers
  /detector/{detectorId}/member/stop:
    POST:
      summary: Stopmonitoringmembers
      description: >-
        Stops GuardDuty monitoring for the specified member accounts. Use the
        StartMonitoringMembers operation to restart monitoring for those
        accounts. With autoEnableOrganizationMembers configuration for your
        organization set to ALL, you'll receive an error if you attempt to stop
        monitoring the member accounts in your organization.
      operationId: amazonWebServicesStopMonitoringMembers
  /detector/{detectorId}/findings/unarchive:
    POST:
      summary: Unarchivefindings
      description: Unarchives GuardDuty findings specified by the findingIds.
      operationId: amazonWebServicesUnarchiveFindings
  /detector/{detectorId}/findings/feedback:
    POST:
      summary: Updatefindingsfeedback
      description: Marks the specified GuardDuty findings as useful or not useful.
      operationId: amazonWebServicesUpdateFindingsFeedback
  /detector/{detectorId}/member/detector/update:
    POST:
      summary: Updatememberdetectors
      description: >-
        Contains information on member accounts to be updated. There might be
        regional differences because some data sources might not be available in
        all the Amazon Web Services Regions where GuardDuty is presently
        supported. For more information, see Regions and endpoints.
      operationId: amazonWebServicesUpdateMemberDetectors
tags: []
