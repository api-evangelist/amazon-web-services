openapi: 3.1.0
info:
  title: lakeformation
  description: >-
    <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the
    Lake Formation service.</p>
paths:
  /AddLFTagsToResource:
    POST:
      summary: Addlftagstoresource
      description: Attaches one or more LF-tags to an existing resource.
      operationId: amazonWebServicesAddLFTagsToResource
  /AssumeDecoratedRoleWithSAML:
    POST:
      summary: Assumedecoratedrolewithsaml
      description: >-
        Allows a caller to assume an IAM role decorated as the SAML user
        specified in the SAML assertion included in the request. This decoration
        allows Lake Formation to enforce access policies against the SAML users
        and groups. This API operation requires SAML federation setup in the
        callerâ€™s account as it can only be called with valid SAML assertions.
        Lake Formation does not scope down the permission of the assumed role.
        All permissions attached to the role via the SAML federation setup will
        be included in the role session.   This decorated role is expected to
        access data in Amazon S3 by getting temporary access from Lake Formation
        which is authorized via the virtual API GetDataAccess. Therefore, all
        SAML roles that can be assumed via AssumeDecoratedRoleWithSAML must at a
        minimum include lakeformation:GetDataAccess in their role policies. A
        typical IAM policy attached to such a role would look as follows: 
      operationId: amazonWebServicesAssumeDecoratedRoleWithSAML
  /BatchGrantPermissions:
    POST:
      summary: Batchgrantpermissions
      description: Batch operation to grant permissions to the principal.
      operationId: amazonWebServicesBatchGrantPermissions
  /BatchRevokePermissions:
    POST:
      summary: Batchrevokepermissions
      description: Batch operation to revoke permissions from the principal.
      operationId: amazonWebServicesBatchRevokePermissions
  /CancelTransaction:
    POST:
      summary: Canceltransaction
      description: >-
        Attempts to cancel the specified transaction. Returns an exception if
        the transaction was previously committed.
      operationId: amazonWebServicesCancelTransaction
  /CommitTransaction:
    POST:
      summary: Committransaction
      description: >-
        Attempts to commit the specified transaction. Returns an exception if
        the transaction was previously aborted. This API action is idempotent if
        called multiple times for the same transaction.
      operationId: amazonWebServicesCommitTransaction
  /CreateDataCellsFilter:
    POST:
      summary: Createdatacellsfilter
      description: >-
        Creates a data cell filter to allow one to grant access to certain
        columns on certain rows.
      operationId: amazonWebServicesCreateDataCellsFilter
  /CreateLFTag:
    POST:
      summary: Createlftag
      description: Creates an LF-tag with the specified name and values.
      operationId: amazonWebServicesCreateLFTag
  /CreateLakeFormationIdentityCenterConfiguration:
    POST:
      summary: Createlakeformationidentitycenterconfiguration
      description: >-
        Creates an IAM Identity Center connection with Lake Formation to allow
        IAM Identity Center users and groups to access Data Catalog resources.
      operationId: amazonWebServicesCreateLakeFormationIdentityCenterConfiguration
  /CreateLakeFormationOptIn:
    POST:
      summary: Createlakeformationoptin
      description: >-
        Enforce Lake Formation permissions for the given databases, tables, and
        principals.
      operationId: amazonWebServicesCreateLakeFormationOptIn
  /DeleteDataCellsFilter:
    POST:
      summary: Deletedatacellsfilter
      description: Deletes a data cell filter.
      operationId: amazonWebServicesDeleteDataCellsFilter
  /DeleteLFTag:
    POST:
      summary: Deletelftag
      description: >-
        Deletes the specified LF-tag given a key name. If the input parameter
        tag key was not found, then the operation will throw an exception. When
        you delete an LF-tag, the LFTagPolicy attached to the LF-tag becomes
        invalid. If the deleted LF-tag was still assigned to any resource, the
        tag policy attach to the deleted LF-tag will no longer be applied to the
        resource.
      operationId: amazonWebServicesDeleteLFTag
  /DeleteLakeFormationIdentityCenterConfiguration:
    POST:
      summary: Deletelakeformationidentitycenterconfiguration
      description: Deletes an IAM Identity Center connection with Lake Formation.
      operationId: amazonWebServicesDeleteLakeFormationIdentityCenterConfiguration
  /DeleteLakeFormationOptIn:
    POST:
      summary: Deletelakeformationoptin
      description: >-
        Remove the Lake Formation permissions enforcement of the given
        databases, tables, and principals.
      operationId: amazonWebServicesDeleteLakeFormationOptIn
  /DeleteObjectsOnCancel:
    POST:
      summary: Deleteobjectsoncancel
      description: >-
        For a specific governed table, provides a list of Amazon S3 objects that
        will be written during the current transaction and that can be
        automatically deleted if the transaction is canceled. Without this call,
        no Amazon S3 objects are automatically deleted when a transaction
        cancels.   The Glue ETL library function
        write_dynamic_frame.from_catalog() includes an option to automatically
        call DeleteObjectsOnCancel before writes. For more information, see
        Rolling Back Amazon S3 Writes. 
      operationId: amazonWebServicesDeleteObjectsOnCancel
  /DeregisterResource:
    POST:
      summary: Deregisterresource
      description: >-
        Deregisters the resource as managed by the Data Catalog. When you
        deregister a path, Lake Formation removes the path from the inline
        policy attached to your service-linked role.
      operationId: amazonWebServicesDeregisterResource
  /DescribeLakeFormationIdentityCenterConfiguration:
    POST:
      summary: Describelakeformationidentitycenterconfiguration
      description: Retrieves the instance ARN and application ARN for the connection.
      operationId: amazonWebServicesDescribeLakeFormationIdentityCenterConfiguration
  /DescribeResource:
    POST:
      summary: Describeresource
      description: >-
        Retrieves the current data access role for the given resource registered
        in Lake Formation.
      operationId: amazonWebServicesDescribeResource
  /DescribeTransaction:
    POST:
      summary: Describetransaction
      description: Returns the details of a single transaction.
      operationId: amazonWebServicesDescribeTransaction
  /ExtendTransaction:
    POST:
      summary: Extendtransaction
      description: >-
        Indicates to the service that the specified transaction is still active
        and should not be treated as idle and aborted. Write transactions that
        remain idle for a long period are automatically aborted unless
        explicitly extended.
      operationId: amazonWebServicesExtendTransaction
  /GetDataCellsFilter:
    POST:
      summary: Getdatacellsfilter
      description: Returns a data cells filter.
      operationId: amazonWebServicesGetDataCellsFilter
  /GetDataLakeSettings:
    POST:
      summary: Getdatalakesettings
      description: >-
        Retrieves the list of the data lake administrators of a Lake
        Formation-managed data lake. 
      operationId: amazonWebServicesGetDataLakeSettings
  /GetEffectivePermissionsForPath:
    POST:
      summary: Geteffectivepermissionsforpath
      description: >-
        Returns the Lake Formation permissions for a specified table or database
        resource located at a path in Amazon S3. GetEffectivePermissionsForPath
        will not return databases and tables if the catalog is encrypted.
      operationId: amazonWebServicesGetEffectivePermissionsForPath
  /GetLFTag:
    POST:
      summary: Getlftag
      description: Returns an LF-tag definition.
      operationId: amazonWebServicesGetLFTag
  /GetQueryState:
    POST:
      summary: Getquerystate
      description: >-
        Returns the state of a query previously submitted. Clients are expected
        to poll GetQueryState to monitor the current state of the planning
        before retrieving the work units. A query state is only visible to the
        principal that made the initial call to StartQueryPlanning.
      operationId: amazonWebServicesGetQueryState
  /GetQueryStatistics:
    POST:
      summary: Getquerystatistics
      description: Retrieves statistics on the planning and execution of a query.
      operationId: amazonWebServicesGetQueryStatistics
  /GetResourceLFTags:
    POST:
      summary: Getresourcelftags
      description: Returns the LF-tags applied to a resource.
      operationId: amazonWebServicesGetResourceLFTags
  /GetTableObjects:
    POST:
      summary: Gettableobjects
      description: >-
        Returns the set of Amazon S3 objects that make up the specified governed
        table. A transaction ID or timestamp can be specified for time-travel
        queries.
      operationId: amazonWebServicesGetTableObjects
  /GetTemporaryGluePartitionCredentials:
    POST:
      summary: Gettemporarygluepartitioncredentials
      description: >-
        This API is identical to GetTemporaryTableCredentials except that this
        is used when the target Data Catalog resource is of type Partition. Lake
        Formation restricts the permission of the vended credentials with the
        same scope down policy which restricts access to a single Amazon S3
        prefix.
      operationId: amazonWebServicesGetTemporaryGluePartitionCredentials
  /GetTemporaryGlueTableCredentials:
    POST:
      summary: Gettemporarygluetablecredentials
      description: >-
        Allows a caller in a secure environment to assume a role with permission
        to access Amazon S3. In order to vend such credentials, Lake Formation
        assumes the role associated with a registered location, for example an
        Amazon S3 bucket, with a scope down policy which restricts the access to
        a single prefix.
      operationId: amazonWebServicesGetTemporaryGlueTableCredentials
  /GetWorkUnitResults:
    POST:
      summary: Getworkunitresults
      description: >-
        Returns the work units resulting from the query. Work units can be
        executed in any order and in parallel. 
      operationId: amazonWebServicesGetWorkUnitResults
  /GetWorkUnits:
    POST:
      summary: Getworkunits
      description: Retrieves the work units generated by the StartQueryPlanning operation.
      operationId: amazonWebServicesGetWorkUnits
  /GrantPermissions:
    POST:
      summary: Grantpermissions
      description: >-
        Grants permissions to the principal to access metadata in the Data
        Catalog and data organized in underlying data storage such as Amazon S3.
        For information about permissions, see Security and Access Control to
        Metadata and Data.
      operationId: amazonWebServicesGrantPermissions
  /ListDataCellsFilter:
    POST:
      summary: Listdatacellsfilter
      description: Lists all the data cell filters on a table.
      operationId: amazonWebServicesListDataCellsFilter
  /ListLFTags:
    POST:
      summary: Listlftags
      description: 'Lists LF-tags that the requester has permission to view. '
      operationId: amazonWebServicesListLFTags
  /ListLakeFormationOptIns:
    POST:
      summary: Listlakeformationoptins
      description: >-
        Retrieve the current list of resources and principals that are opt in to
        enforce Lake Formation permissions.
      operationId: amazonWebServicesListLakeFormationOptIns
  /ListPermissions:
    POST:
      summary: Listpermissions
      description: >-
        Returns a list of the principal permissions on the resource, filtered by
        the permissions of the caller. For example, if you are granted an ALTER
        permission, you are able to see only the principal permissions for
        ALTER. This operation returns only those permissions that have been
        explicitly granted. For information about permissions, see Security and
        Access Control to Metadata and Data.
      operationId: amazonWebServicesListPermissions
  /ListResources:
    POST:
      summary: Listresources
      description: Lists the resources registered to be managed by the Data Catalog.
      operationId: amazonWebServicesListResources
  /ListTableStorageOptimizers:
    POST:
      summary: Listtablestorageoptimizers
      description: >-
        Returns the configuration of all storage optimizers associated with a
        specified table.
      operationId: amazonWebServicesListTableStorageOptimizers
  /ListTransactions:
    POST:
      summary: Listtransactions
      description: >-
        Returns metadata about transactions and their status. To prevent the
        response from growing indefinitely, only uncommitted transactions and
        those available for time-travel queries are returned. This operation can
        help you identify uncommitted transactions or to get information about
        transactions.
      operationId: amazonWebServicesListTransactions
  /PutDataLakeSettings:
    POST:
      summary: Putdatalakesettings
      description: >-
        Sets the list of data lake administrators who have admin privileges on
        all resources managed by Lake Formation. For more information on admin
        privileges, see Granting Lake Formation Permissions. This API replaces
        the current list of data lake admins with the new list being passed. To
        add an admin, fetch the current list and add the new admin to that list
        and pass that list in this API.
      operationId: amazonWebServicesPutDataLakeSettings
  /RegisterResource:
    POST:
      summary: Registerresource
      description: >-
        Registers the resource as managed by the Data Catalog. To add or update
        data, Lake Formation needs read/write access to the chosen Amazon S3
        path. Choose a role that you know has permission to do this, or choose
        the AWSServiceRoleForLakeFormationDataAccess service-linked role. When
        you register the first Amazon S3 path, the service-linked role and a new
        inline policy are created on your behalf. Lake Formation adds the first
        path to the inline policy and attaches it to the service-linked role.
        When you register subsequent paths, Lake Formation adds the path to the
        existing policy. The following request registers a new location and
        gives Lake Formation permission to use the service-linked role to access
        that location.  ResourceArn = arn:aws:s3:::my-bucket
        UseServiceLinkedRole = true  If UseServiceLinkedRole is not set to true,
        you must provide or set the RoleArn: 
        arn:aws:iam::12345:role/my-data-access-role 
      operationId: amazonWebServicesRegisterResource
  /RemoveLFTagsFromResource:
    POST:
      summary: Removelftagsfromresource
      description: >-
        Removes an LF-tag from the resource. Only database, table, or
        tableWithColumns resource are allowed. To tag columns, use the column
        inclusion list in tableWithColumns to specify column input.
      operationId: amazonWebServicesRemoveLFTagsFromResource
  /RevokePermissions:
    POST:
      summary: Revokepermissions
      description: >-
        Revokes permissions to the principal to access metadata in the Data
        Catalog and data organized in underlying data storage such as Amazon S3.
      operationId: amazonWebServicesRevokePermissions
  /SearchDatabasesByLFTags:
    POST:
      summary: Searchdatabasesbylftags
      description: >-
        This operation allows a search on DATABASE resources by TagCondition.
        This operation is used by admins who want to grant user permissions on
        certain TagConditions. Before making a grant, the admin can use
        SearchDatabasesByTags to find all resources where the given
        TagConditions are valid to verify whether the returned resources can be
        shared.
      operationId: amazonWebServicesSearchDatabasesByLFTags
  /SearchTablesByLFTags:
    POST:
      summary: Searchtablesbylftags
      description: >-
        This operation allows a search on TABLE resources by LFTags. This will
        be used by admins who want to grant user permissions on certain LF-tags.
        Before making a grant, the admin can use SearchTablesByLFTags to find
        all resources where the given LFTags are valid to verify whether the
        returned resources can be shared.
      operationId: amazonWebServicesSearchTablesByLFTags
  /StartQueryPlanning:
    POST:
      summary: Startqueryplanning
      description: >-
        Submits a request to process a query statement. This operation generates
        work units that can be retrieved with the GetWorkUnits operation as soon
        as the query state is WORKUNITS_AVAILABLE or FINISHED.
      operationId: amazonWebServicesStartQueryPlanning
  /StartTransaction:
    POST:
      summary: Starttransaction
      description: >-
        Starts a new transaction and returns its transaction ID. Transaction IDs
        are opaque objects that you can use to identify a transaction.
      operationId: amazonWebServicesStartTransaction
  /UpdateDataCellsFilter:
    POST:
      summary: Updatedatacellsfilter
      description: Updates a data cell filter.
      operationId: amazonWebServicesUpdateDataCellsFilter
  /UpdateLFTag:
    POST:
      summary: Updatelftag
      description: >-
        Updates the list of possible values for the specified LF-tag key. If the
        LF-tag does not exist, the operation throws an EntityNotFoundException.
        The values in the delete key values will be deleted from list of
        possible values. If any value in the delete key values is attached to a
        resource, then API errors out with a 400 Exception - "Update not
        allowed". Untag the attribute before deleting the LF-tag key's value. 
      operationId: amazonWebServicesUpdateLFTag
  /UpdateLakeFormationIdentityCenterConfiguration:
    POST:
      summary: Updatelakeformationidentitycenterconfiguration
      description: Updates the IAM Identity Center connection parameters.
      operationId: amazonWebServicesUpdateLakeFormationIdentityCenterConfiguration
  /UpdateResource:
    POST:
      summary: Updateresource
      description: >-
        Updates the data access role used for vending access to the given
        (registered) resource in Lake Formation. 
      operationId: amazonWebServicesUpdateResource
  /UpdateTableObjects:
    POST:
      summary: Updatetableobjects
      description: >-
        Updates the manifest of Amazon S3 objects that make up the specified
        governed table.
      operationId: amazonWebServicesUpdateTableObjects
  /UpdateTableStorageOptimizer:
    POST:
      summary: Updatetablestorageoptimizer
      description: Updates the configuration of the storage optimizers for a table.
      operationId: amazonWebServicesUpdateTableStorageOptimizer
tags: []
