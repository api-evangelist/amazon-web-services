openapi: 3.1.0
info:
  title: models.lex.v2
  description: <p/>
paths:
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/customvocabulary/DEFAULT/batchcreate:
    PUT:
      summary: Batchcreatecustomvocabularyitem
      description: >-
        Create a batch of custom vocabulary items for a given bot locale's
        custom vocabulary.
      operationId: amazonWebServicesBatchCreateCustomVocabularyItem
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/customvocabulary/DEFAULT/batchdelete:
    POST:
      summary: Batchdeletecustomvocabularyitem
      description: >-
        Delete a batch of custom vocabulary items for a given bot locale's
        custom vocabulary.
      operationId: amazonWebServicesBatchDeleteCustomVocabularyItem
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/customvocabulary/DEFAULT/batchupdate:
    PUT:
      summary: Batchupdatecustomvocabularyitem
      description: >-
        Update a batch of custom vocabulary items for a given bot locale's
        custom vocabulary.
      operationId: amazonWebServicesBatchUpdateCustomVocabularyItem
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/:
    PUT:
      summary: Updatebotlocale
      description: Updates the settings that a bot has for a specific locale.
      operationId: amazonWebServicesUpdateBotLocale
  /bots/:
    POST:
      summary: Listbots
      description: Gets a list of available bots.
      operationId: amazonWebServicesListBots
  /bots/{botId}/botaliases/:
    POST:
      summary: Listbotaliases
      description: Gets a list of aliases for the specified bot.
      operationId: amazonWebServicesListBotAliases
  /bots/{botId}/botversions/{botVersion}/botlocales/:
    POST:
      summary: Listbotlocales
      description: Gets a list of locales for the specified bot.
      operationId: amazonWebServicesListBotLocales
  /bots/{botId}/replicas/:
    POST:
      summary: Listbotreplicas
      description: The action to list the replicated bots.
      operationId: amazonWebServicesListBotReplicas
  /bots/{botId}/botversions/:
    POST:
      summary: Listbotversions
      description: >-
        Gets information about all of the versions of a bot. The ListBotVersions
        operation returns a summary of each version of a bot. For example, if a
        bot has three numbered versions, the ListBotVersions operation returns
        for summaries, one for each numbered version and one for the DRAFT
        version. The ListBotVersions operation always returns at least one
        version, the DRAFT version.
      operationId: amazonWebServicesListBotVersions
  /exports/:
    POST:
      summary: Listexports
      description: >-
        Lists the exports for a bot, bot locale, or custom vocabulary. Exports
        are kept in the list for 7 days.
      operationId: amazonWebServicesListExports
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/:
    POST:
      summary: Listintents
      description: Get a list of intents that meet the specified criteria.
      operationId: amazonWebServicesListIntents
  /policy/{resourceArn}/:
    PUT:
      summary: Updateresourcepolicy
      description: >-
        Replaces the existing resource policy for a bot or bot alias with a new
        one. If the policy doesn't exist, Amazon Lex returns an exception.
      operationId: amazonWebServicesUpdateResourcePolicy
  /policy/{resourceArn}/statements/:
    POST:
      summary: Createresourcepolicystatement
      description: >-
        Adds a new resource policy statement to a bot or bot alias. If a
        resource policy exists, the statement is added to the current resource
        policy. If a policy doesn't exist, a new policy is created. You can't
        create a resource policy statement that allows cross-account access.
      operationId: amazonWebServicesCreateResourcePolicyStatement
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/{intentId}/slots/:
    POST:
      summary: Listslots
      description: Gets a list of slots that match the specified criteria.
      operationId: amazonWebServicesListSlots
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/slottypes/:
    POST:
      summary: Listslottypes
      description: Gets a list of slot types that match the specified criteria.
      operationId: amazonWebServicesListSlotTypes
  /testsets/{testSetId}/testsetdiscrepancy:
    POST:
      summary: Createtestsetdiscrepancyreport
      description: >-
        Create a report that describes the differences between the bot and the
        test set.
      operationId: amazonWebServicesCreateTestSetDiscrepancyReport
  /createuploadurl/:
    POST:
      summary: Createuploadurl
      description: >-
        Gets a pre-signed S3 write URL that you use to upload the zip archive
        when importing a bot or a bot locale. 
      operationId: amazonWebServicesCreateUploadUrl
  /bots/{botId}/:
    PUT:
      summary: Updatebot
      description: 'Updates the configuration of an existing bot. '
      operationId: amazonWebServicesUpdateBot
  /bots/{botId}/botaliases/{botAliasId}/:
    PUT:
      summary: Updatebotalias
      description: Updates the configuration of an existing bot alias.
      operationId: amazonWebServicesUpdateBotAlias
  /bots/{botId}/replicas/{replicaRegion}/:
    GET:
      summary: Describebotreplica
      description: Monitors the bot replication status through the UI console.
      operationId: amazonWebServicesDescribeBotReplica
  /bots/{botId}/botversions/{botVersion}/:
    GET:
      summary: Describebotversion
      description: Provides metadata about a version of a bot.
      operationId: amazonWebServicesDescribeBotVersion
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/customvocabulary:
    DELETE:
      summary: Deletecustomvocabulary
      description: >-
        Removes a custom vocabulary from the specified locale in the specified
        bot.
      operationId: amazonWebServicesDeleteCustomVocabulary
  /exports/{exportId}/:
    PUT:
      summary: Updateexport
      description: >-
        Updates the password used to protect an export zip archive. The password
        is not required. If you don't supply a password, Amazon Lex generates a
        zip file that is not protected by a password. This is the archive that
        is available at the pre-signed S3 URL provided by the DescribeExport
        operation.
      operationId: amazonWebServicesUpdateExport
  /imports/{importId}/:
    GET:
      summary: Describeimport
      description: Gets information about a specific import.
      operationId: amazonWebServicesDescribeImport
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/{intentId}/:
    PUT:
      summary: Updateintent
      description: Updates the settings for an intent.
      operationId: amazonWebServicesUpdateIntent
  /policy/{resourceArn}/statements/{statementId}/:
    DELETE:
      summary: Deleteresourcepolicystatement
      description: >-
        Deletes a policy statement from a resource policy. If you delete the
        last statement from a policy, the policy is deleted. If you specify a
        statement ID that doesn't exist in the policy, or if the bot or bot
        alias doesn't have a policy attached, Amazon Lex returns an exception.
      operationId: amazonWebServicesDeleteResourcePolicyStatement
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/{intentId}/slots/{slotId}/:
    PUT:
      summary: Updateslot
      description: Updates the settings for a slot.
      operationId: amazonWebServicesUpdateSlot
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/slottypes/{slotTypeId}/:
    PUT:
      summary: Updateslottype
      description: Updates the configuration of an existing slot type.
      operationId: amazonWebServicesUpdateSlotType
  /testsets/{testSetId}:
    PUT:
      summary: Updatetestset
      description: The action to update the test set.
      operationId: amazonWebServicesUpdateTestSet
  /bots/{botId}/utterances/:
    DELETE:
      summary: Deleteutterances
      description: >-
        Deletes stored utterances. Amazon Lex stores the utterances that users
        send to your bot. Utterances are stored for 15 days for use with the
        ListAggregatedUtterances operation, and then stored indefinitely for use
        in improving the ability of your bot to respond to user input.. Use the
        DeleteUtterances operation to manually delete utterances for a specific
        session. When you use the DeleteUtterances operation, utterances stored
        for improving your bot's ability to respond to user input are deleted
        immediately. Utterances stored for use with the ListAggregatedUtterances
        operation are deleted after 15 days.
      operationId: amazonWebServicesDeleteUtterances
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/botrecommendations/{botRecommendationId}/:
    PUT:
      summary: Updatebotrecommendation
      description: Updates an existing bot recommendation request.
      operationId: amazonWebServicesUpdateBotRecommendation
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/generations/{generationId}:
    GET:
      summary: Describebotresourcegeneration
      description: >-
        Returns information about a request to generate a bot through natural
        language description, made through the StartBotResource API. Use the
        generatedBotLocaleUrl to retrieve the Amazon S3 object containing the
        bot locale configuration. You can then modify and import this
        configuration.
      operationId: amazonWebServicesDescribeBotResourceGeneration
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/customvocabulary/DEFAULT/metadata:
    GET:
      summary: Describecustomvocabularymetadata
      description: Provides metadata information about a custom vocabulary.
      operationId: amazonWebServicesDescribeCustomVocabularyMetadata
  /testexecutions/{testExecutionId}:
    GET:
      summary: Describetestexecution
      description: Gets metadata information about the test execution.
      operationId: amazonWebServicesDescribeTestExecution
  /testsetdiscrepancy/{testSetDiscrepancyReportId}:
    GET:
      summary: Describetestsetdiscrepancyreport
      description: Gets metadata information about the test set discrepancy report.
      operationId: amazonWebServicesDescribeTestSetDiscrepancyReport
  /testsetgenerations/{testSetGenerationId}:
    GET:
      summary: Describetestsetgeneration
      description: Gets metadata information about the test set generation.
      operationId: amazonWebServicesDescribeTestSetGeneration
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/generate:
    POST:
      summary: Generatebotelement
      description: Generates sample utterances for an intent.
      operationId: amazonWebServicesGenerateBotElement
  /testexecutions/{testExecutionId}/artifacturl:
    GET:
      summary: Gettestexecutionartifactsurl
      description: >-
        The pre-signed Amazon S3 URL to download the test execution result
        artifacts.
      operationId: amazonWebServicesGetTestExecutionArtifactsUrl
  /bots/{botId}/aggregatedutterances/:
    POST:
      summary: Listaggregatedutterances
      description: >-
        Provides a list of utterances that users have sent to the bot.
        Utterances are aggregated by the text of the utterance. For example, all
        instances where customers used the phrase "I want to order pizza" are
        aggregated into the same line in the response. You can see both detected
        utterances and missed utterances. A detected utterance is where the bot
        properly recognized the utterance and activated the associated intent. A
        missed utterance was not recognized by the bot and didn't activate an
        intent. Utterances can be aggregated for a bot alias or for a bot
        version, but not both at the same time. Utterances statistics are not
        generated under the following conditions:   The childDirected field was
        set to true when the bot was created.   You are using slot obfuscation
        with one or more slots.   You opted out of participating in improving
        Amazon Lex.  
      operationId: amazonWebServicesListAggregatedUtterances
  /bots/{botId}/replicas/{replicaRegion}/botaliases/:
    POST:
      summary: Listbotaliasreplicas
      description: >-
        The action to list the replicated bots created from the source bot
        alias.
      operationId: amazonWebServicesListBotAliasReplicas
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/botrecommendations/:
    PUT:
      summary: Startbotrecommendation
      description: >-
        Use this to provide your transcript data, and to start the bot
        recommendation process.
      operationId: amazonWebServicesStartBotRecommendation
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/generations:
    POST:
      summary: Listbotresourcegenerations
      description: Lists the generation requests made for a bot locale.
      operationId: amazonWebServicesListBotResourceGenerations
  /bots/{botId}/replicas/{replicaRegion}/botversions/:
    POST:
      summary: Listbotversionreplicas
      description: >-
        Contains information about all the versions replication statuses
        applicable for Global Resiliency.
      operationId: amazonWebServicesListBotVersionReplicas
  /builtins/locales/{localeId}/intents/:
    POST:
      summary: Listbuiltinintents
      description: >-
        Gets a list of built-in intents provided by Amazon Lex that you can use
        in your bot.  To use a built-in intent as a the base for your own
        intent, include the built-in intent signature in the
        parentIntentSignature parameter when you call the CreateIntent
        operation. For more information, see CreateIntent.
      operationId: amazonWebServicesListBuiltInIntents
  /builtins/locales/{localeId}/slottypes/:
    POST:
      summary: Listbuiltinslottypes
      description: Gets a list of built-in slot types that meet the specified criteria.
      operationId: amazonWebServicesListBuiltInSlotTypes
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/customvocabulary/DEFAULT/list:
    POST:
      summary: Listcustomvocabularyitems
      description: >-
        Paginated list of custom vocabulary items for a given bot locale's
        custom vocabulary.
      operationId: amazonWebServicesListCustomVocabularyItems
  /imports/:
    PUT:
      summary: Startimport
      description: >-
        Starts importing a bot, bot locale, or custom vocabulary from a zip
        archive that you uploaded to an S3 bucket.
      operationId: amazonWebServicesStartImport
  /bots/{botId}/analytics/intentmetrics:
    POST:
      summary: Listintentmetrics
      description: >-
        Retrieves summary metrics for the intents in your bot. The following
        fields are required:    metrics – A list of AnalyticsIntentMetric
        objects. In each object, use the name field to specify the metric to
        calculate, the statistic field to specify whether to calculate the Sum,
        Average, or Max number, and the order field to specify whether to sort
        the results in Ascending or Descending order.    startDateTime and
        endDateTime – Define a time range for which you want to retrieve
        results.   Of the optional fields, you can organize the results in the
        following ways:   Use the filters field to filter the results, the
        groupBy field to specify categories by which to group the results, and
        the binBy field to specify time intervals by which to group the
        results.   Use the maxResults field to limit the number of results to
        return in a single response and the nextToken field to return the next
        batch of results if the response does not return the full set of
        results.   Note that an order field exists in both binBy and metrics.
        You can specify only one order in a given request.
      operationId: amazonWebServicesListIntentMetrics
  /bots/{botId}/analytics/intentpaths:
    POST:
      summary: Listintentpaths
      description: >-
        Retrieves summary statistics for a path of intents that users take over
        sessions with your bot. The following fields are required:   
        startDateTime and endDateTime – Define a time range for which you want
        to retrieve results.    intentPath – Define an order of intents for
        which you want to retrieve metrics. Separate intents in the path with a
        forward slash. For example, populate the intentPath field with
        /BookCar/BookHotel to see details about how many times users invoked the
        BookCar and BookHotel intents in that order.   Use the optional filters
        field to filter the results.
      operationId: amazonWebServicesListIntentPaths
  /bots/{botId}/analytics/intentstagemetrics:
    POST:
      summary: Listintentstagemetrics
      description: >-
        Retrieves summary metrics for the stages within intents in your bot. The
        following fields are required:    metrics – A list of
        AnalyticsIntentStageMetric objects. In each object, use the name field
        to specify the metric to calculate, the statistic field to specify
        whether to calculate the Sum, Average, or Max number, and the order
        field to specify whether to sort the results in Ascending or Descending
        order.    startDateTime and endDateTime – Define a time range for which
        you want to retrieve results.   Of the optional fields, you can organize
        the results in the following ways:   Use the filters field to filter the
        results, the groupBy field to specify categories by which to group the
        results, and the binBy field to specify time intervals by which to group
        the results.   Use the maxResults field to limit the number of results
        to return in a single response and the nextToken field to return the
        next batch of results if the response does not return the full set of
        results.   Note that an order field exists in both binBy and metrics.
        You can only specify one order in a given request.
      operationId: amazonWebServicesListIntentStageMetrics
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/botrecommendations/{botRecommendationId}/intents:
    POST:
      summary: Listrecommendedintents
      description: >-
        Gets a list of recommended intents provided by the bot recommendation
        that you can use in your bot. Intents in the response are ordered by
        relevance.
      operationId: amazonWebServicesListRecommendedIntents
  /bots/{botId}/analytics/sessions:
    POST:
      summary: Listsessionanalyticsdata
      description: >-
        Retrieves a list of metadata for individual user sessions with your bot.
        The startDateTime and endDateTime fields are required. These fields
        define a time range for which you want to retrieve results. Of the
        optional fields, you can organize the results in the following ways:  
        Use the filters field to filter the results and the sortBy field to
        specify the values by which to sort the results.   Use the maxResults
        field to limit the number of results to return in a single response and
        the nextToken field to return the next batch of results if the response
        does not return the full set of results.  
      operationId: amazonWebServicesListSessionAnalyticsData
  /bots/{botId}/analytics/sessionmetrics:
    POST:
      summary: Listsessionmetrics
      description: >-
        Retrieves summary metrics for the user sessions with your bot. The
        following fields are required:    metrics – A list of
        AnalyticsSessionMetric objects. In each object, use the name field to
        specify the metric to calculate, the statistic field to specify whether
        to calculate the Sum, Average, or Max number, and the order field to
        specify whether to sort the results in Ascending or Descending order.   
        startDateTime and endDateTime – Define a time range for which you want
        to retrieve results.   Of the optional fields, you can organize the
        results in the following ways:   Use the filters field to filter the
        results, the groupBy field to specify categories by which to group the
        results, and the binBy field to specify time intervals by which to group
        the results.   Use the maxResults field to limit the number of results
        to return in a single response and the nextToken field to return the
        next batch of results if the response does not return the full set of
        results.   Note that an order field exists in both binBy and metrics.
        Currently, you can specify it in either field, but not in both.
      operationId: amazonWebServicesListSessionMetrics
  /tags/{resourceARN}:
    DELETE:
      summary: Untagresource
      description: Removes tags from a bot, bot alias, or bot channel.
      operationId: amazonWebServicesUntagResource
  /testexecutions/{testExecutionId}/results:
    POST:
      summary: Listtestexecutionresultitems
      description: Gets a list of test execution result items.
      operationId: amazonWebServicesListTestExecutionResultItems
  /testexecutions:
    POST:
      summary: Listtestexecutions
      description: The list of test set executions.
      operationId: amazonWebServicesListTestExecutions
  /testsets/{testSetId}/records:
    POST:
      summary: Listtestsetrecords
      description: The list of test set records.
      operationId: amazonWebServicesListTestSetRecords
  /testsets:
    POST:
      summary: Listtestsets
      description: The list of the test sets
      operationId: amazonWebServicesListTestSets
  /bots/{botId}/analytics/utterances:
    POST:
      summary: Listutteranceanalyticsdata
      description: ' To use this API operation, your IAM role must have permissions to perform the ListAggregatedUtterances operation, which provides access to utterance-related analytics. See Viewing utterance statistics for the IAM policy to apply to the IAM role.  Retrieves a list of metadata for individual user utterances to your bot. The following fields are required:    startDateTime and endDateTime – Define a time range for which you want to retrieve results.   Of the optional fields, you can organize the results in the following ways:   Use the filters field to filter the results and the sortBy field to specify the values by which to sort the results.   Use the maxResults field to limit the number of results to return in a single response and the nextToken field to return the next batch of results if the response does not return the full set of results.  '
      operationId: amazonWebServicesListUtteranceAnalyticsData
  /bots/{botId}/analytics/utterancemetrics:
    POST:
      summary: Listutterancemetrics
      description: ' To use this API operation, your IAM role must have permissions to perform the ListAggregatedUtterances operation, which provides access to utterance-related analytics. See Viewing utterance statistics for the IAM policy to apply to the IAM role.  Retrieves summary metrics for the utterances in your bot. The following fields are required:    metrics – A list of AnalyticsUtteranceMetric objects. In each object, use the name field to specify the metric to calculate, the statistic field to specify whether to calculate the Sum, Average, or Max number, and the order field to specify whether to sort the results in Ascending or Descending order.    startDateTime and endDateTime – Define a time range for which you want to retrieve results.   Of the optional fields, you can organize the results in the following ways:   Use the filters field to filter the results, the groupBy field to specify categories by which to group the results, and the binBy field to specify time intervals by which to group the results.   Use the maxResults field to limit the number of results to return in a single response and the nextToken field to return the next batch of results if the response does not return the full set of results.   Note that an order field exists in both binBy and metrics. Currently, you can specify it in either field, but not in both.'
      operationId: amazonWebServicesListUtteranceMetrics
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/botrecommendations/{botRecommendationId}/associatedtranscripts:
    POST:
      summary: Searchassociatedtranscripts
      description: Search for associated transcripts that meet the specified criteria.
      operationId: amazonWebServicesSearchAssociatedTranscripts
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/startgeneration:
    PUT:
      summary: Startbotresourcegeneration
      description: >-
        Starts a request for the descriptive bot builder to generate a bot
        locale configuration based on the prompt you provide it. After you make
        this call, use the DescribeBotResourceGeneration operation to check on
        the status of the generation and for the generatedBotLocaleUrl when the
        generation is complete. Use that value to retrieve the Amazon S3 object
        containing the bot locale configuration. You can then modify and import
        this configuration.
      operationId: amazonWebServicesStartBotResourceGeneration
  /testsets/{testSetId}/testexecutions:
    POST:
      summary: Starttestexecution
      description: The action to start test set execution.
      operationId: amazonWebServicesStartTestExecution
  /testsetgenerations:
    PUT:
      summary: Starttestsetgeneration
      description: The action to start the generation of test set.
      operationId: amazonWebServicesStartTestSetGeneration
  /bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/botrecommendations/{botRecommendationId}/stopbotrecommendation:
    PUT:
      summary: Stopbotrecommendation
      description: Stop an already running Bot Recommendation request.
      operationId: amazonWebServicesStopBotRecommendation
tags: []
