openapi: 3.1.0
info:
  title: appsync
  description: >-
    <p>AppSync provides API actions for creating and interacting with data
    sources using GraphQL from your application.</p>
paths:
  /v1/domainnames/{domainName}/apiassociation:
    GET:
      summary: Getapiassociation
      description: Retrieves an ApiAssociation object.
      operationId: amazonWebServicesGetApiAssociation
  /v1/sourceApis/{sourceApiIdentifier}/mergedApiAssociations:
    POST:
      summary: Associatemergedgraphqlapi
      description: >-
        Creates an association between a Merged API and source API using the
        source API's identifier.
      operationId: amazonWebServicesAssociateMergedGraphqlApi
  /v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations:
    POST:
      summary: Associatesourcegraphqlapi
      description: >-
        Creates an association between a Merged API and source API using the
        Merged API's identifier.
      operationId: amazonWebServicesAssociateSourceGraphqlApi
  /v1/apis/{apiId}/ApiCaches:
    GET:
      summary: Getapicache
      description: Retrieves an ApiCache object.
      operationId: amazonWebServicesGetApiCache
  /v1/apis/{apiId}/apikeys:
    GET:
      summary: Listapikeys
      description: >-
        Lists the API keys for a given API.  API keys are deleted automatically
        60 days after they expire. However, they may still be included in the
        response until they have actually been deleted. You can safely call
        DeleteApiKey to manually delete a key before it's automatically
        deleted. 
      operationId: amazonWebServicesListApiKeys
  /v1/apis/{apiId}/datasources:
    GET:
      summary: Listdatasources
      description: Lists the data sources for a given API.
      operationId: amazonWebServicesListDataSources
  /v1/domainnames:
    GET:
      summary: Listdomainnames
      description: Lists multiple custom domain names.
      operationId: amazonWebServicesListDomainNames
  /v1/apis/{apiId}/functions:
    GET:
      summary: Listfunctions
      description: List multiple functions.
      operationId: amazonWebServicesListFunctions
  /v1/apis:
    GET:
      summary: Listgraphqlapis
      description: Lists your GraphQL APIs.
      operationId: amazonWebServicesListGraphqlApis
  /v1/apis/{apiId}/types/{typeName}/resolvers:
    GET:
      summary: Listresolvers
      description: Lists the resolvers for a given API and type.
      operationId: amazonWebServicesListResolvers
  /v1/apis/{apiId}/types:
    GET:
      summary: Listtypes
      description: Lists the types for a given API.
      operationId: amazonWebServicesListTypes
  /v1/apis/{apiId}/apikeys/{id}:
    POST:
      summary: Updateapikey
      description: Updates an API key. You can update the key as long as it's not deleted.
      operationId: amazonWebServicesUpdateApiKey
  /v1/apis/{apiId}/datasources/{name}:
    POST:
      summary: Updatedatasource
      description: Updates a DataSource object.
      operationId: amazonWebServicesUpdateDataSource
  /v1/domainnames/{domainName}:
    POST:
      summary: Updatedomainname
      description: Updates a custom DomainName object.
      operationId: amazonWebServicesUpdateDomainName
  /v1/apis/{apiId}/functions/{functionId}:
    POST:
      summary: Updatefunction
      description: Updates a Function object.
      operationId: amazonWebServicesUpdateFunction
  /v1/apis/{apiId}:
    POST:
      summary: Updategraphqlapi
      description: Updates a GraphqlApi object.
      operationId: amazonWebServicesUpdateGraphqlApi
  /v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}:
    POST:
      summary: Updateresolver
      description: Updates a Resolver object.
      operationId: amazonWebServicesUpdateResolver
  /v1/apis/{apiId}/types/{typeName}:
    POST:
      summary: Updatetype
      description: Updates a Type object.
      operationId: amazonWebServicesUpdateType
  /v1/sourceApis/{sourceApiIdentifier}/mergedApiAssociations/{associationId}:
    DELETE:
      summary: Disassociatemergedgraphqlapi
      description: >-
        Deletes an association between a Merged API and source API using the
        source API's identifier and the association ID.
      operationId: amazonWebServicesDisassociateMergedGraphqlApi
  /v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations/{associationId}:
    POST:
      summary: Updatesourceapiassociation
      description: >-
        Updates some of the configuration choices of a particular source API
        association.
      operationId: amazonWebServicesUpdateSourceApiAssociation
  /v1/dataplane-evaluatecode:
    POST:
      summary: Evaluatecode
      description: >-
        Evaluates the given code and returns the response. The code definition
        requirements depend on the specified runtime. For APPSYNC_JS runtimes,
        the code defines the request and response functions. The request
        function takes the incoming request after a GraphQL operation is parsed
        and converts it into a request configuration for the selected data
        source operation. The response function interprets responses from the
        data source and maps it to the shape of the GraphQL field output type. 
      operationId: amazonWebServicesEvaluateCode
  /v1/dataplane-evaluatetemplate:
    POST:
      summary: Evaluatemappingtemplate
      description: >-
        Evaluates a given template and returns the response. The mapping
        template can be a request or response template. Request templates take
        the incoming request after a GraphQL operation is parsed and convert it
        into a request configuration for the selected data source operation.
        Response templates interpret responses from the data source and map it
        to the shape of the GraphQL field output type. Mapping templates are
        written in the Apache Velocity Template Language (VTL).
      operationId: amazonWebServicesEvaluateMappingTemplate
  /v1/apis/{apiId}/FlushCache:
    DELETE:
      summary: Flushapicache
      description: Flushes an ApiCache object.
      operationId: amazonWebServicesFlushApiCache
  /v1/datasources/introspections/{introspectionId}:
    GET:
      summary: Getdatasourceintrospection
      description: >-
        Retrieves the record of an existing introspection. If the retrieval is
        successful, the result of the instrospection will also be returned. If
        the retrieval fails the operation, an error message will be returned
        instead.
      operationId: amazonWebServicesGetDataSourceIntrospection
  /v1/apis/{apiId}/environmentVariables:
    PUT:
      summary: Putgraphqlapienvironmentvariables
      description: >-
        Creates a list of environmental variables in an API by its ID value. 
        When creating an environmental variable, it must follow the constraints
        below:   Both JavaScript and VTL templates support environmental
        variables.   Environmental variables are not evaluated before function
        invocation.   Environmental variables only support string values.   Any
        defined value in an environmental variable is considered a string
        literal and not expanded.   Variable evaluations should ideally be
        performed in the function code.   When creating an environmental
        variable key-value pair, it must follow the additional constraints
        below:   Keys must begin with a letter.   Keys must be at least two
        characters long.   Keys can only contain letters, numbers, and the
        underscore character (_).   Values can be up to 512 characters long.  
        You can configure up to 50 key-value pairs in a GraphQL API.   You can
        create a list of environmental variables by adding it to the
        environmentVariables payload as a list in the format
        {"key1":"value1","key2":"value2", â€¦}. Note that each call of the
        PutGraphqlApiEnvironmentVariables action will result in the overwriting
        of the existing environmental variable list of that API. This means the
        existing environmental variables will be lost. To avoid this, you must
        include all existing and new environmental variables in the list each
        time you call this action.
      operationId: amazonWebServicesPutGraphqlApiEnvironmentVariables
  /v1/apis/{apiId}/schema:
    GET:
      summary: Getintrospectionschema
      description: Retrieves the introspection schema for a GraphQL API.
      operationId: amazonWebServicesGetIntrospectionSchema
  /v1/apis/{apiId}/schemacreation:
    POST:
      summary: Startschemacreation
      description: >-
        Adds a new schema to your GraphQL API. This operation is asynchronous.
        Use to determine when it has completed.
      operationId: amazonWebServicesStartSchemaCreation
  /v1/apis/{apiId}/functions/{functionId}/resolvers:
    GET:
      summary: Listresolversbyfunction
      description: List the resolvers that are associated with a specific function.
      operationId: amazonWebServicesListResolversByFunction
  /v1/apis/{apiId}/sourceApiAssociations:
    GET:
      summary: Listsourceapiassociations
      description: Lists the SourceApiAssociationSummary data.
      operationId: amazonWebServicesListSourceApiAssociations
  /v1/tags/{resourceArn}:
    DELETE:
      summary: Untagresource
      description: Untags a resource.
      operationId: amazonWebServicesUntagResource
  /v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations/{associationId}/types:
    GET:
      summary: Listtypesbyassociation
      description: Lists Type objects by the source API association ID.
      operationId: amazonWebServicesListTypesByAssociation
  /v1/datasources/introspections:
    POST:
      summary: Startdatasourceintrospection
      description: >-
        Creates a new introspection. Returns the introspectionId of the new
        introspection after its creation. 
      operationId: amazonWebServicesStartDataSourceIntrospection
  /v1/mergedApis/{mergedApiIdentifier}/sourceApiAssociations/{associationId}/merge:
    POST:
      summary: Startschemamerge
      description: >-
        Initiates a merge operation. Returns a status that shows the result of
        the merge operation.
      operationId: amazonWebServicesStartSchemaMerge
  /v1/apis/{apiId}/ApiCaches/update:
    POST:
      summary: Updateapicache
      description: Updates the cache for the GraphQL API.
      operationId: amazonWebServicesUpdateApiCache
tags: []
